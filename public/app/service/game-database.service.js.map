{"version":3,"sources":["../src/ts/app/service/game-database.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,qBAA8B,eAAe,CAAC,CAAA;AAE9C,QAAO,6BAA6B,CAAC,CAAA;AAUrC;IAiBI,6BAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAhBtB,aAAQ,GAAG,WAAW,CAAC;QACvB,aAAQ,GAAG,WAAW,CAAC;QACvB,mBAAc,GAAG,kBAAkB,CAAC;QACpC,gBAAW,GAAG,eAAe,CAAC;QAE9B,WAAM,GAAG,UAAU,CAAC;QACpB,eAAU,GAAG,cAAc,CAAC;QAEpC,uBAAuB;QACf,UAAK,GAAW,EAAE,CAAC;QACnB,UAAK,GAAW,EAAE,CAAC;QACnB,iBAAY,GAAkB,EAAE,CAAC;QACjC,cAAS,GAAe,EAAE,CAAC;QAC3B,SAAI,GAAU,EAAE,CAAC;QACjB,aAAQ,GAAc,EAAE,CAAC;IAEC,CAAC;IAEvC,oEAAoE;IAChE,sCAAQ,GAAR,UAAS,YAAqB;QAA9B,iBASC;QATQ,4BAAqB,GAArB,qBAAqB;QAC1B,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,YAAY,CAAC,CAAC;QACxD,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;aACtE,IAAI,CAAC;YACF,uBAAuB;YACvB,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAArB,CAAqB,CAAC,CAAC;YAClD,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;YAC3C,MAAM,CAAC,KAAI,CAAC,KAAK,CAAC;QACtB,CAAC,CAAC,CAAC;IACX,CAAC;IAEO,wCAAU,GAAlB,UAAmB,IAAU;QACzB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEtD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED,qCAAO,GAAP,UAAQ,EAAU;QAAlB,iBAMC;QALG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,WAAW,EAAE,CAAE,CAAC;aACzE,IAAI,CAAC,UAAC,IAAI;YACP,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACX,CAAC;IAGO,uCAAS,GAAjB;QAAA,iBAWC;QAVG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;iBAC3C,SAAS,EAAE;iBACX,IAAI,CAAC,UAAA,QAAQ;gBACV,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAY,CAAC;gBACvC,MAAM,CAAC,KAAI,CAAC,KAAK,CAAC;YACtB,CAAC,CAAC;iBACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACjC,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAEO,sCAAQ,GAAhB,UAAiB,EAAU;QACvB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,IAAI;gBACpB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC;oBACrB,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACjC,CAAC;YACL,CAAC,CAAC,CAAA;QACN,CAAC;QACD,mEAAmE;QACnE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,EAAE,CAAC;aACzC,SAAS,EAAE;aACX,IAAI,CAAC,UAAA,QAAQ;YACV,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAS,CAAC;QACtC,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAEO,wCAAU,GAAlB,UAAmB,QAAgB;QAC/B,EAAE,CAAC,CAAC,QAAQ,KAAK,MAAM,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAC,EAAE,EAAE,EAAE;gBACnB,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oBACtC,MAAM,CAAC,CAAC,CAAC;gBACb,CAAC;gBACD,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oBACtC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACd,CAAC;gBACD,MAAM,CAAC,CAAC,CAAC;YACb,CAAC,CAAC,CAAC;QACP,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAGD,sCAAQ,GAAR;QAAA,iBAWC;QAVG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;iBAC3C,SAAS,EAAE;iBACX,IAAI,CAAC,UAAA,QAAQ;gBACV,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAY,CAAC;gBACvC,MAAM,CAAC,KAAI,CAAC,KAAK,CAAC;YACtB,CAAC,CAAC;iBACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACjC,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAEO,+CAAiB,GAAzB,UAA0B,KAAY,EAAE,EAAU;QAC9C,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,KAAK,CAAC,OAAO,CAAC,UAAA,IAAI;YACd,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,CAAC;gBACnC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC3B,CAAC;QACL,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,WAAW,CAAC;IACvB,CAAC;IAED,8CAAgB,GAAhB,UAAiB,EAAU;QACvB,IAAI,KAAK,GAAW,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAC3D,KAAK,CAAC,IAAI,CAAC,UAAC,EAAE,EAAE,EAAE;YACd,IAAI,IAAI,GAAG,EAAE,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;YACjC,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;gBACb,MAAM,CAAC,EAAE,CAAC,YAAY,GAAG,EAAE,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YACtD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;QACL,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAGO,yCAAW,GAAnB;QAAA,iBAWC;QAVG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;iBAChD,SAAS,EAAE;iBACX,IAAI,CAAC,UAAA,QAAQ;gBACV,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,EAAe,CAAC;gBAC7C,MAAM,CAAC,KAAI,CAAC,QAAQ,CAAC;YACzB,CAAC,CAAC;iBACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACjC,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;IAChC,CAAC;IAED,iDAAmB,GAAnB,UAAoB,EAAU;QAC1B,IAAI,QAAQ,GAAc,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;QACpE,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC;IAGD,6CAAe,GAAf;QAAA,iBAWC;QAVG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;iBACxD,SAAS,EAAE;iBACX,IAAI,CAAC,UAAA,QAAQ;gBACV,KAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,IAAI,EAAmB,CAAC;gBACrD,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC;YAC7B,CAAC,CAAC;iBACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACjC,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC;IACpC,CAAC;IAED,gDAAkB,GAAlB,UAAmB,EAAU;QAA7B,iBAUC;QATG,MAAM,CAAC,IAAI,OAAO,CAAc,UAAC,OAAO,EAAE,MAAM;YAC5C,KAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,UAAC,YAAY;gBACrC,YAAY,CAAC,OAAO,CAAC,UAAC,WAAW;oBAC7B,EAAE,CAAC,CAAC,WAAW,CAAC,aAAa,IAAI,EAAE,CAAC,CAAC,CAAC;wBAClC,OAAO,CAAC,WAAW,CAAC,CAAC;oBACzB,CAAC;gBACL,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAA;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,0CAAY,GAAZ;QAAA,iBAWC;QAVG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;iBAClD,SAAS,EAAE;iBACX,IAAI,CAAC,UAAA,QAAQ;gBACV,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,IAAI,EAAgB,CAAC;gBAC/C,MAAM,CAAC,KAAI,CAAC,SAAS,CAAC;YAC1B,CAAC,CAAC;iBACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACjC,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC;IACjC,CAAC;IAED,6CAAe,GAAf,UAAgB,EAAU;QAA1B,iBAUC;QATG,MAAM,CAAC,IAAI,OAAO,CAAW,UAAC,OAAO,EAAE,MAAM;YACzC,KAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAC,SAAS;gBAC/B,SAAS,CAAC,OAAO,CAAC,UAAC,QAAQ;oBACvB,EAAE,CAAC,CAAC,QAAQ,CAAC,UAAU,IAAI,EAAE,CAAC,CAAC,CAAC;wBAC5B,OAAO,CAAC,QAAQ,CAAC,CAAC;oBACtB,CAAC;gBACL,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAA;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,qCAAO,GAAP;QAAA,iBAWC;QAVG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;iBACxC,SAAS,EAAE;iBACX,IAAI,CAAC,UAAA,QAAQ;gBACV,KAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAW,CAAC;gBACrC,MAAM,CAAC,KAAI,CAAC,IAAI,CAAC;YACrB,CAAC,CAAC;iBACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACjC,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAED,wCAAU,GAAV,UAAW,EAAU;QAArB,iBAUC;QATG,MAAM,CAAC,IAAI,OAAO,CAAM,UAAC,OAAO,EAAE,MAAM;YACpC,KAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,UAAC,IAAI;gBACrB,IAAI,CAAC,OAAO,CAAC,UAAC,GAAG;oBACb,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC;wBAClB,OAAO,CAAC,GAAG,CAAC,CAAC;oBACjB,CAAC;gBACL,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,yCAAW,GAAnB,UAAoB,KAAU;QAC1B,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;QAC9C,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;IAClD,CAAC;IAtOL;QAAC,iBAAU,EAAE;;2BAAA;IAuOb,0BAAC;AAAD,CAtOA,AAsOC,IAAA;AAtOY,2BAAmB,sBAsO/B,CAAA","file":"game-database.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Headers, Http } from '@angular/http';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport { Name } from '../model/name';\r\nimport { Game } from '../model/game';\r\nimport { PlayerCount } from '../model/player-count';\r\nimport { Duration } from '../model/duration';\r\nimport { Tag } from '../model/tag';\r\nimport { TagGame } from '../model/tag-game';\r\n\r\n@Injectable()\r\nexport class GameDatabaseService {\r\n    private gamesUrl = '/api/game';\r\n    private namesUrl = '/api/name';\r\n    private playerCountUrl = '/api/playerCount';\r\n    private durationUrl = '/api/duration';\r\n\r\n    private tagUrl = '/api/tag';\r\n    private tagGameUrl = '/api/tagGame';\r\n\r\n    // cache all the things\r\n    private games: Game[] = [];\r\n    private names: Name[] = [];\r\n    private playercounts: PlayerCount[] = [];\r\n    private durations: Duration[] = [];\r\n    private tags: Tag[] = [];\r\n    private tagGames: TagGame[] = [];\r\n\r\n    constructor(private http: Http) { }\r\n\r\n// TODO: update the API to expand names and tagGames on game queries\r\n    getGames(sortProperty = 'name'): Promise<Game[]> {\r\n        console.log('getting games, sorting by ', sortProperty);\r\n        return Promise.all([this._getGames(), this.getNames(), this.getTagGames()])\r\n            .then(() => {\r\n                // set it and forget it\r\n                this.games.forEach(game => this._setupGame(game));\r\n                this.games = this._sortGames(sortProperty);\r\n                return this.games;\r\n            });\r\n    }\r\n\r\n    private _setupGame(game: Game): Game {\r\n        game.Names = this.getNamesByGameID(game.GameID);\r\n        game.TagGames = this.getTagGamesByGameID(game.GameID);\r\n\r\n        return game;\r\n    }\r\n\r\n    getGame(id: number): Promise<Game> {\r\n        return Promise.all([ this._getGame(id), this.getNames(), this.getTagGames() ])\r\n            .then((vals) => {\r\n                let game = vals[0];\r\n                return this._setupGame(game);\r\n            });\r\n    }\r\n\r\n    private _gamePromise: Promise<Game[]>;\r\n    private _getGames(): Promise<Game[]> {\r\n        if (!this._gamePromise) {\r\n            this._gamePromise = this.http.get(this.gamesUrl)\r\n                .toPromise()\r\n                .then(response => {\r\n                    this.games = response.json() as Game[];\r\n                    return this.games;\r\n                })\r\n                .catch(this.handleError);\r\n        } \r\n        return this._gamePromise;\r\n    }\r\n\r\n    private _getGame(id: number): Promise<Game> {\r\n        if (this.games.length > 0) {\r\n            this.games.forEach((game) => {\r\n                if (game.GameID === id) {\r\n                    return Promise.resolve(game);\r\n                }\r\n            })\r\n        }\r\n        // either no games are loaded or we couldn't find the specified one\r\n        return this.http.get(this.gamesUrl + '/' + id)\r\n            .toPromise()\r\n            .then(response => {\r\n                return response.json()[0] as Game;\r\n            })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    private _sortGames(property: string): Game[] {\r\n        if (property === 'name') {\r\n            this.games.sort((g1, g2) => {\r\n                if (g1.Names[0].Name > g2.Names[0].Name) {\r\n                    return 1;\r\n                }\r\n                if (g1.Names[0].Name < g2.Names[0].Name) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n        return this.games;\r\n    }\r\n\r\n    private _namePromise: Promise<Name[]>;\r\n    getNames(): Promise<Name[]> {\r\n        if (!this._namePromise) {\r\n            this._namePromise = this.http.get(this.namesUrl)\r\n                .toPromise()\r\n                .then(response => {\r\n                    this.names = response.json() as Name[];\r\n                    return this.names;\r\n                })\r\n                .catch(this.handleError);\r\n        }\r\n        return this._namePromise;\r\n    }\r\n\r\n    private _getItemsByGameID(items: any[], id: number): any[] {\r\n        let returnItems = [];\r\n        items.forEach(item => {\r\n            if (item.GameID && item.GameID == id) {\r\n                returnItems.push(item);\r\n            }\r\n        });\r\n        return returnItems;\r\n    }\r\n\r\n    getNamesByGameID(id: number): Name[] {\r\n        let names: Name[] = this._getItemsByGameID(this.names, id);\r\n        names.sort((n1, n2) => {\r\n            let comp = n2.Weight - n1.Weight;\r\n            if (comp === 0) {\r\n                return n1.DateModified > n2.DateModified ? -1 : 1;\r\n            } else {\r\n                return comp;\r\n            }\r\n        });\r\n        return names;\r\n    }\r\n\r\n    private _tagGamePromise: Promise<TagGame[]>;\r\n    private getTagGames(): Promise<TagGame[]> {\r\n        if (!this._tagGamePromise) {\r\n            this._tagGamePromise = this.http.get(this.tagGameUrl)\r\n                .toPromise()\r\n                .then(response => {\r\n                    this.tagGames = response.json() as TagGame[];\r\n                    return this.tagGames;\r\n                })\r\n                .catch(this.handleError);\r\n        }\r\n        return this._tagGamePromise;\r\n    }\r\n\r\n    getTagGamesByGameID(id: number): TagGame[] {\r\n        let tagGames: TagGame[] = this._getItemsByGameID(this.tagGames, id);\r\n        return tagGames;\r\n    }\r\n\r\n    private _playerCountPromise: Promise<PlayerCount[]>;\r\n    getPlayerCounts(): Promise<PlayerCount[]> {\r\n        if (!this._playerCountPromise) {\r\n            this._playerCountPromise = this.http.get(this.playerCountUrl)\r\n                .toPromise()\r\n                .then(response => {\r\n                    this.playercounts = response.json() as PlayerCount[];\r\n                    return this.playercounts;\r\n                })\r\n                .catch(this.handleError);\r\n        }\r\n        return this._playerCountPromise;\r\n    }\r\n\r\n    getPlayerCountById(id: number): Promise<PlayerCount> {\r\n        return new Promise<PlayerCount>((resolve, reject) => {\r\n            this.getPlayerCounts().then((playercounts) => {\r\n                playercounts.forEach((playercount) => {\r\n                    if (playercount.PlayerCountID == id) {\r\n                        resolve(playercount);\r\n                    }\r\n                });\r\n            })\r\n        });\r\n    }\r\n\r\n    private _durationPromise: Promise<Duration[]>;\r\n    getDurations(): Promise<Duration[]> {\r\n        if (!this._durationPromise) {\r\n            this._durationPromise = this.http.get(this.durationUrl)\r\n                .toPromise()\r\n                .then(response => {\r\n                    this.durations = response.json() as Duration[];\r\n                    return this.durations;\r\n                })\r\n                .catch(this.handleError);\r\n        }\r\n        return this._durationPromise;\r\n    }\r\n\r\n    getDurationById(id: number): Promise<Duration> {\r\n        return new Promise<Duration>((resolve, reject) => {\r\n            this.getDurations().then((durations) => {\r\n                durations.forEach((duration) => {\r\n                    if (duration.DurationID == id) {\r\n                        resolve(duration);\r\n                    }\r\n                });\r\n            })\r\n        });\r\n    }\r\n\r\n    private _tagPromise: Promise<Tag[]>;\r\n    getTags(): Promise<Tag[]> {\r\n        if (!this._tagPromise) {\r\n            this._tagPromise = this.http.get(this.tagUrl)\r\n                .toPromise()\r\n                .then(response => {\r\n                    this.tags = response.json() as Tag[];\r\n                    return this.tags;\r\n                })\r\n                .catch(this.handleError);\r\n        }\r\n        return this._tagPromise;\r\n    }\r\n\r\n    getTagById(id: number): Promise<Tag> {\r\n        return new Promise<Tag>((resolve, reject) => {\r\n            this.getTags().then((tags) => {\r\n                tags.forEach((tag) => {\r\n                    if (tag.TagID == id) {\r\n                        resolve(tag);\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    private handleError(error: any): Promise<any> {\r\n        console.error('An error has occurred', error);\r\n        return Promise.reject(error.message || error);\r\n    }\r\n}\r\n"]}