{"version":3,"sources":["../src/ts/app/service/player-count.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,qBAA8B,eAAe,CAAC,CAAA;AAE9C,QAAO,6BAA6B,CAAC,CAAA;AAKrC;IAKI,4BAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAJtB,mBAAc,GAAG,kBAAkB,CAAA;QAEnC,iBAAY,GAAkB,EAAE,CAAC;IAEP,CAAC;IAEnC,4CAAe,GAAf;QAAA,iBAYC;QAXG,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;iBACpC,SAAS,EAAE;iBACX,IAAI,CAAC,UAAA,QAAQ;gBACV,KAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,IAAI,EAAmB,CAAC;gBACrD,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC;YAC7B,CAAC,CAAC;iBACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACjC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC9C,CAAC;IACL,CAAC;IAEO,wCAAW,GAAnB,UAAoB,KAAU;QAC1B,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;QAC9C,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;IAClD,CAAC;IAzBL;QAAC,iBAAU,EAAE;;0BAAA;IA0Bb,yBAAC;AAAD,CAzBA,AAyBC,IAAA;AAzBY,0BAAkB,qBAyB9B,CAAA","file":"player-count.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Headers, Http } from '@angular/http';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport { PlayerCount } from '../model/player-count';\r\n\r\n@Injectable()\r\nexport class PlayerCountService {\r\n    private playerCountUrl = '/api/playerCount'\r\n\r\n    private playercounts: PlayerCount[] = [];\r\n\r\n    constructor(private http: Http) { }\r\n\r\n    getPlayerCounts(): Promise<PlayerCount[]> {\r\n        if (this.playercounts.length === 0) {\r\n            return this.http.get(this.playerCountUrl)\r\n                .toPromise()\r\n                .then(response => {\r\n                    this.playercounts = response.json() as PlayerCount[];\r\n                    return this.playercounts;\r\n                })\r\n                .catch(this.handleError);\r\n        } else {\r\n            return Promise.resolve(this.playercounts);\r\n        }\r\n    }\r\n\r\n    private handleError(error: any): Promise<any> {\r\n        console.error('An error has occurred', error);\r\n        return Promise.reject(error.message || error);\r\n    }\r\n}"]}