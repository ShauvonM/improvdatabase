{"version":3,"sources":["../src/ts/app/component/game-card.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAKO,eAAe,CAAC,CAAA;AAEvB,QAAO,mBAAmB,CAAC,CAAA;AAG3B,8BAEuB,iBAAiB,CAAC,CAAA;AACzC,sCAAoC,kCAAkC,CAAC,CAAA;AAEvE,qBAAqB,eAAe,CAAC,CAAA;AAWrC;IAUI,2BACY,mBAAwC,EACxC,WAAwB;QADxB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,gBAAW,GAAX,WAAW,CAAa;QAP3B,aAAQ,GAAY,KAAK,CAAC;QACnC,SAAI,GAAU,EAAE,CAAC;IAOb,CAAC;IAEL,oCAAQ,GAAR;QAAA,iBAQC;QAPG,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;aAC/D,IAAI,CAAC,UAAC,WAAW,IAAK,OAAA,KAAI,CAAC,WAAW,GAAG,WAAW,EAA9B,CAA8B,CAAC,CAAC;QAE3D,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;aACzD,IAAI,CAAC,UAAC,QAAQ,IAAK,OAAA,KAAI,CAAC,QAAQ,GAAG,QAAQ,EAAxB,CAAwB,CAAC,CAAC;QAElD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,UAAC,IAAI,IAAK,OAAA,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAxB,CAAwB,CAAC,CAAC;IACjG,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAKC;QAJG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,OAAO;YAC/B,KAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC;iBAC7C,IAAI,CAAC,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAnB,CAAmB,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,yCAAa,GAAb,UAAc,IAAU;QACpB,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAChB,KAAK,UAAU;gBACX,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBACxC,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACpB,CAAC;gBACD,KAAK,CAAC;QACd,CAAC;IACL,CAAC;IAED,uCAAW,GAAX;QACI,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;IACxC,CAAC;IA5CD;QAAC,YAAK,EAAE;;mDAAA;IAIR;QAAC,YAAK,EAAE;;uDAAA;IAVZ;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,eAAe;YACzB,WAAW,EAAE,sCAAsC;SACtD,CAAC;;yBAAA;IA+CF,wBAAC;AAAD,CA9CA,AA8CC,IAAA;AA9CY,yBAAiB,oBA8C7B,CAAA","file":"game-card.component.js","sourcesContent":["import { \r\n    Component,\r\n    OnInit,\r\n    OnDestroy,\r\n    Input\r\n} from '@angular/core';\r\n\r\nimport 'rxjs/Subscription';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nimport {\r\n    Tool,\r\n    ToolService } from './app.component';\r\nimport { GameDatabaseService } from '../service/game-database.service';\r\n\r\nimport { Game } from '../model/game';\r\nimport { Name } from '../model/name';\r\nimport { PlayerCount } from '../model/player-count';\r\nimport { Duration } from '../model/duration';\r\nimport { Tag } from '../model/tag';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: '.ng-game-card',\r\n    templateUrl: '../template/game-card.component.html'\r\n})\r\nexport class GameCardComponent implements OnInit, OnDestroy {\r\n    @Input() game: Game;\r\n    playerCount: PlayerCount;\r\n    duration: Duration;\r\n\r\n    @Input() showTags: boolean = false;\r\n    tags: Tag[] = [];\r\n\r\n    toolSubscription: Subscription;\r\n\r\n    constructor(\r\n        private gameDatabaseService: GameDatabaseService,\r\n        private toolService: ToolService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.gameDatabaseService.getPlayerCountById(this.game.PlayerCountID)\r\n            .then((playercount) => this.playerCount = playercount);\r\n\r\n        this.gameDatabaseService.getDurationById(this.game.DurationID)\r\n            .then((duration) => this.duration = duration);\r\n\r\n        this.toolSubscription = this.toolService.tool$.subscribe((tool) => this.onToolClicked(tool));\r\n    }\r\n\r\n    loadTags(): void {\r\n        this.game.TagGames.forEach((tagGame) => {\r\n            this.gameDatabaseService.getTagById(tagGame.TagID)\r\n                .then((tag) => this.tags.push(tag));\r\n        });\r\n    }\r\n\r\n    onToolClicked(tool: Tool): void {\r\n        switch (tool.name) {\r\n            case \"showTags\":\r\n                this.showTags = tool.active;\r\n                if (tool.active && this.tags.length === 0) {\r\n                    this.loadTags();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.toolSubscription.unsubscribe();\r\n    }\r\n}\r\n"]}