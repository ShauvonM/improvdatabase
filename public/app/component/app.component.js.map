{"version":3,"sources":["../src/ts/app/component/app.component.ts"],"names":[],"mappings":"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","file":"app.component.js","sourcesContent":["import {\r\n    Component,\r\n    OnInit,\r\n    Renderer,\r\n    Injectable\r\n } from '@angular/core';\r\n import 'rxjs/Subject';\r\n import { Subject } from 'rxjs/Subject';\r\n import { Router, RoutesRecognized } from '@angular/router';\r\n\r\n export class Tool {\r\n     icon: string;\r\n     name: string;\r\n     text: string;\r\n     active: boolean = false;\r\n }\r\n\r\n export class ToolService {\r\n     private toolSource = new Subject<Tool>();\r\n     tool$ = this.toolSource.asObservable();\r\n\r\n     private scrollSource = new Subject<number>();\r\n     scroll$ = this.scrollSource.asObservable();\r\n\r\n     toolSelected(tool: Tool) {\r\n         this.toolSource.next(tool);\r\n     }\r\n\r\n     onScroll(pos: number) {\r\n         this.scrollSource.next(pos);\r\n     }\r\n }\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'my-app',\r\n    templateUrl: '../template/app.component.html',\r\n    providers: [ ToolService ]\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n    loader = document.getElementById(\"siteLoader\");\r\n    showMenu: boolean = false;\r\n    showFullscreen: boolean = false;\r\n\r\n    toolbarTitle: string = \"\";\r\n    tools: Tool[] = [];\r\n\r\n    constructor(\r\n        private _renderer: Renderer,\r\n        private router: Router,\r\n        private toolService: ToolService\r\n    ) {\r\n        // when changing route, reset the toolbar\r\n        router.events.subscribe(val => {\r\n            if (val instanceof RoutesRecognized) {\r\n                this.setTitle(\"\");\r\n                this.setTools([]);\r\n            }\r\n        })\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.hideLoader();\r\n\r\n        this.toolService.scroll$.subscribe(pos => {\r\n            console.log('pos', pos);\r\n        })\r\n    }\r\n\r\n    setTitle(title: string): void {\r\n        this.toolbarTitle = title;\r\n    }\r\n\r\n    setTools(tools: Tool[]): void {\r\n        this.tools = tools;\r\n    }\r\n\r\n    toolClick(tool: Tool): void {\r\n        this.toolService.toolSelected(tool);\r\n    }\r\n\r\n    showLoader(): void {\r\n        this.loader.style.display = \"block\";\r\n    }\r\n\r\n    hideLoader(): void {\r\n        this.loader.style.display = \"none\";\r\n    }\r\n\r\n    toggleNav(): void {\r\n        this.showMenu = !this.showMenu;\r\n    }\r\n\r\n    fullscreen(): void {\r\n        // are we full-screen?\r\n        if (document.fullscreenElement ||\r\n            document.webkitFullscreenElement) {\r\n            \r\n            // exit full-screen\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n            } else if (document.webkitExitFullscreen) {\r\n                document.webkitExitFullscreen();\r\n            }\r\n\r\n            this.showFullscreen = false;\r\n        } else {\r\n            var i = document.body;\r\n            // go full-screen\r\n            if (i.requestFullscreen) {\r\n                i.requestFullscreen();\r\n            } else if (i.webkitRequestFullscreen) {\r\n                i.webkitRequestFullscreen();\r\n            }\r\n\r\n            this.showFullscreen = true;\r\n        }\r\n    }\r\n\r\n    onScroll(distance: any): void {\r\n        console.log(distance);\r\n    }\r\n}\r\n"]}