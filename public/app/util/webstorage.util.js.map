{"version":3,"sources":["../src/ts/app/util/webstorage.util.ts"],"names":[],"mappings":"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","file":"webstorage.util.js","sourcesContent":["import { NgZone, Injectable, OnDestroy, Type, ComponentRef } from \"@angular/core\";\r\n\r\n// https://github.com/marcj/angular2-localstorage\r\n\r\nexport class WebStorageEmitter {\r\n    protected static subscribed: any = [];\r\n    protected static ngZones: NgZone[] = [];\r\n    protected static subscribers: any = [];\r\n\r\n    public static register(ngZone: NgZone) {\r\n        let index: number = WebStorageEmitter.ngZones.indexOf(ngZone);\r\n        if (index === -1) {\r\n            index = WebStorageEmitter.ngZones.push(ngZone) - 1;\r\n        }\r\n        WebStorageEmitter.subscribed[index] = ngZone.onMicrotaskEmpty.subscribe(() => {\r\n            for (let callback of WebStorageEmitter.subscribers) {\r\n                callback();\r\n            }\r\n        });\r\n    }\r\n\r\n    public static subscribe (callback: Function) {\r\n        WebStorageEmitter.subscribers.push(callback);\r\n    }\r\n\r\n    public static unregister(ngZone: NgZone) {\r\n        let index: number = WebStorageEmitter.ngZones.indexOf(ngZone);\r\n        if (index >= 0) {\r\n            WebStorageEmitter.subscribed[index].unsubscribe();\r\n        }\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class WebStorageService implements OnDestroy {\r\n\r\n    constructor(private ngZone: NgZone) {\r\n        WebStorageEmitter.register(this.ngZone);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        WebStorageEmitter.unregister(this.ngZone);\r\n    }\r\n\r\n}\r\n\r\nexport function WebStorageSubscriber(appPromise: Promise<ComponentRef<any>>) {\r\n    appPromise.then((bla) => {\r\n        bla.injector.get(<Type<any>>WebStorageService);\r\n    });\r\n}\r\n\r\ninterface IWebStorage {\r\n    getItem: (key: string) => string;\r\n    setItem: (key: string, value: string) => void;\r\n}\r\n\r\nexport interface WebStorageOptions {\r\n    storageKey?: string,\r\n    serialize?:  (deserialized: any) => string;\r\n    deserialize?: (serialized: string) => any;\r\n}\r\n\r\n// the @LocalStorage() decorator\r\nexport function LocalStorage(storageKeyOrOptions: string|WebStorageOptions = {}) {\r\n    if (\"string\" === typeof storageKeyOrOptions) {\r\n        return WebStorage(localStorage, {storageKey: storageKeyOrOptions as string});\r\n    }\r\n    else {\r\n        return WebStorage(localStorage, storageKeyOrOptions);\r\n    }\r\n}\r\n\r\n// the @SessionStorage() decorator\r\nexport function SessionStorage(storageKeyOrOptions: string|WebStorageOptions = {}) {\r\n    if (\"string\" === typeof storageKeyOrOptions) {\r\n        return WebStorage(sessionStorage, {storageKey: storageKeyOrOptions as string});\r\n    }\r\n    else {\r\n        return WebStorage(sessionStorage, storageKeyOrOptions);\r\n    }\r\n}\r\n\r\nfunction WebStorage(webStorage: IWebStorage, options: WebStorageOptions) {\r\n    return (target: Object, decoratedPropertyName?: string): void => {\r\n        if (!webStorage) {\r\n            return;\r\n        }\r\n\r\n        if (!options.storageKey) {\r\n            options.storageKey = \"\" + \"/\" + decoratedPropertyName;\r\n        }\r\n\r\n        if (!options.serialize) {\r\n            options.serialize = JSON.stringify;\r\n        }\r\n\r\n        if (!options.deserialize) {\r\n            options.deserialize = JSON.parse;\r\n        }\r\n\r\n        Object.defineProperty(target, \"_\" + decoratedPropertyName + \"_mapped\", {\r\n            enumerable: false,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n\r\n        let instances: any = [];\r\n        let values = {};\r\n\r\n        let storageValue = webStorage.getItem(options.storageKey) || null;\r\n        let storageValueJSON = storageValue;\r\n        if (\"string\" === typeof storageValue) {\r\n            try {\r\n                storageValue = options.deserialize(storageValue);\r\n            } catch (e) {\r\n                storageValue = null;\r\n                storageValueJSON = \"null\";\r\n            }\r\n        }\r\n        let oldJSONValues = {};\r\n\r\n        Object.defineProperty(target, decoratedPropertyName, {\r\n            get: function () {\r\n                if (false === this[\"_\" + decoratedPropertyName + \"_mapped\"]) {\r\n                    this[\"_\" + decoratedPropertyName + \"_mapped\"] = instances.length;\r\n\r\n                    // first registration triggers a setting to localStorage value\r\n                    values[instances.length] = storageValue;\r\n                    oldJSONValues[instances.length] = storageValueJSON;\r\n\r\n                    instances.push(this);\r\n                }\r\n                return values[this[\"_\" + decoratedPropertyName + \"_mapped\"]];\r\n            },\r\n            set: function (newValue) {\r\n                if (false === this[\"_\" + decoratedPropertyName + \"_mapped\"]) {\r\n                    this[\"_\" + decoratedPropertyName + \"_mapped\"] = instances.length;\r\n\r\n                    // first registration triggers a setting to localStorage value\r\n                    values[instances.length] = storageValue;\r\n                    oldJSONValues[instances.length] = storageValueJSON;\r\n\r\n                    instances.push(this);\r\n                    // first \"set\" call is ignored if we have already a value from the localStorage\r\n                    if (storageValue) {\r\n                        return;\r\n                    }\r\n                }\r\n                values[this[\"_\" + decoratedPropertyName + \"_mapped\"]] = newValue;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n\r\n        WebStorageEmitter.subscribe(() => {\r\n            for (let instance of instances) {\r\n                let currentValue = options.serialize(instance[decoratedPropertyName]);\r\n                let oldJSONValue = oldJSONValues[instance[\"_\" + decoratedPropertyName + \"_mapped\"]];\r\n                if (currentValue !== oldJSONValue) {\r\n                    oldJSONValues[instance[\"_\" + decoratedPropertyName + \"_mapped\"]] = currentValue;\r\n                    webStorage.setItem(options.storageKey, currentValue);\r\n                }\r\n            }\r\n        });\r\n    };\r\n}"]}