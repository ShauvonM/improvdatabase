{"version":3,"sources":["../src/ts/app/view/game-card.view.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,sCAKuB;AAEvB,6BAA2B;AAG3B,0EAAuE;AAEvE,sCAAqC;AAWrC,IAAa,YAAY;IAWrB,sBACY,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;QAPpD,cAAS,GAAU,QAAQ,CAAC;QAG5B,qCAAqC;QACrC,SAAI,GAAU,EAAE,CAAC;IAIb,CAAC;IAEL,+BAAQ,GAAR;QAAA,iBAYC;QAXG,IAAI,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACxC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC,WAAW,IAAI,GAAG,CAAC,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;QAEjF,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;aAC/D,IAAI,CAAC,UAAC,WAAW,IAAK,OAAA,KAAI,CAAC,WAAW,GAAG,WAAW,EAA9B,CAA8B,CAAC,CAAC;QAE3D,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;aACzD,IAAI,CAAC,UAAC,QAAQ,IAAK,OAAA,KAAI,CAAC,QAAQ,GAAG,QAAQ,EAAxB,CAAwB,CAAC,CAAC;QAElD,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAED,+BAAQ,GAAR;QAAA,iBAiBC;QAhBG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,OAAO;YAC/B,KAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC;iBAC7C,IAAI,CAAC,UAAC,GAAG;gBACN,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACpB,MAAM,CAAA,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;oBAC5B,KAAK,MAAM;wBACP,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;wBAC1B,KAAK,CAAC;oBACV,KAAK,UAAU;wBACX,KAAI,CAAC,SAAS,GAAG,aAAa,CAAC;wBAC/B,KAAK,CAAC;oBACV,KAAK,QAAQ;wBACT,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC;gBAChC,CAAC;YACL,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;;;;;;;;MAWE;IAEF,kCAAW,GAAX;IAEA,CAAC;IACL,mBAAC;AAAD,CAhEA,AAgEC,IAAA;AA/DY;IAAR,YAAK,EAAE;8BAAO,WAAI;0CAAC;AADX,YAAY;IALxB,gBAAS,CAAC;QACP,QAAQ,EAAE,MAAM,CAAC,EAAE;QACnB,QAAQ,EAAE,eAAe;QACzB,WAAW,EAAE,sCAAsC;KACtD,CAAC;qCAamC,2CAAmB;GAZ3C,YAAY,CAgExB;AAhEY,oCAAY","file":"game-card.view.js","sourcesContent":["import { \r\n    Component,\r\n    OnInit,\r\n    OnDestroy,\r\n    Input\r\n} from '@angular/core';\r\n\r\nimport 'rxjs/Subscription';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nimport { GameDatabaseService } from '../service/game-database.service';\r\n\r\nimport { Game } from '../model/game';\r\nimport { Name } from '../model/name';\r\nimport { PlayerCount } from '../model/player-count';\r\nimport { Duration } from '../model/duration';\r\nimport { Tag } from '../model/tag';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: '.ng-game-card',\r\n    templateUrl: '../template/view/game-card.view.html'\r\n})\r\nexport class GameCardView implements OnInit, OnDestroy {\r\n    @Input() game: Game;\r\n    playerCount: PlayerCount;\r\n    duration: Duration;\r\n\r\n    iconClass:string = \"rocket\";\r\n    descriptionText: string;\r\n\r\n    //@Input() showTags: boolean = false;\r\n    tags: Tag[] = [];\r\n\r\n    constructor(\r\n        private gameDatabaseService: GameDatabaseService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        let div = document.createElement(\"div\");\r\n        div.innerHTML = this.game.Description;\r\n        this.descriptionText = div.textContent || div.innerText || this.game.Description;\r\n\r\n        this.gameDatabaseService.getPlayerCountById(this.game.PlayerCountID)\r\n            .then((playercount) => this.playerCount = playercount);\r\n\r\n        this.gameDatabaseService.getDurationById(this.game.DurationID)\r\n            .then((duration) => this.duration = duration);\r\n\r\n        this.loadTags();\r\n    }\r\n\r\n    loadTags(): void {\r\n        this.game.TagGames.forEach((tagGame) => {\r\n            this.gameDatabaseService.getTagById(tagGame.TagID)\r\n                .then((tag) => {\r\n                    this.tags.push(tag);\r\n                    switch(tag.Name.toLowerCase()) {\r\n                        case 'show':\r\n                            this.iconClass = 'ticket';\r\n                            break;\r\n                        case 'exercise':\r\n                            this.iconClass = 'lightbulb-o';\r\n                            break;\r\n                        case 'warmup':\r\n                            this.iconClass = 'fire';\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    /*\r\n    onToolClicked(tool: Tool): void {\r\n        switch (tool.name) {\r\n            case \"showTags\":\r\n                this.showTags = tool.active;\r\n                if (tool.active && this.tags.length === 0) {\r\n                    this.loadTags();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    */\r\n\r\n    ngOnDestroy(): void {\r\n        \r\n    }\r\n}\r\n"]}