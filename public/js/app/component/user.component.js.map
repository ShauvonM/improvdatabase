{"version":3,"sources":["../../app/src/app/component/user.component.ts"],"names":[],"mappings":"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","file":"user.component.js","sourcesContent":["import { \r\n    Component,\r\n    OnInit\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { FormGroup, FormControl, FormBuilder } from '@angular/forms';\r\n\r\nimport { AppComponent } from '../../component/app.component';\r\n\r\nimport { Tool } from '../view/toolbar.view';\r\n\r\nimport { TabData } from '../../model/tab-data';\r\n\r\nimport { UserService } from \"../../service/user.service\";\r\nimport { StripeService } from '../../service/stripe.service';\r\n\r\nimport { User } from \"../../model/user\";\r\nimport { Subscription } from '../../model/subscription';\r\nimport { Purchase } from '../../model/purchase';\r\nimport { Team } from '../../model/team';\r\n\r\nimport { Option, Address } from '../view/editable-metadata.view';\r\n\r\nimport { Util } from '../../util/util';\r\nimport { TimeUtil } from '../../util/time.util';\r\nimport { TextUtil } from '../../util/text.util';\r\n\r\nimport { ShrinkAnim } from '../../util/anim.util';\r\n\r\nconst MAX_ATTEMPTS = 5;\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: \"user\",\r\n    templateUrl: \"../template/user.component.html\",\r\n    animations: [\r\n        ShrinkAnim.height\r\n    ]\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n    title: string = \"Account\";\r\n\r\n    tabs = [\r\n        {\r\n            name: 'Details',\r\n            id: 'user',\r\n            icon: 'user'\r\n        },\r\n        {\r\n            name: 'Behind the Scenes',\r\n            id: 'subscription',\r\n            icon: 'id-card-o'\r\n        }\r\n    ];\r\n    selectedTab: string = 'subscription';\r\n\r\n    email: string;\r\n    password: string;\r\n    passwordConfirm: string;\r\n    passwordMatchError: boolean;\r\n\r\n    loginError: string;\r\n\r\n    errorCount: number;\r\n\r\n    runaway: boolean;\r\n    weGood: boolean;\r\n\r\n    user: User;\r\n\r\n    userName: string;\r\n    descriptionHtml: string;\r\n\r\n    isPosting: boolean;\r\n\r\n    subscription: Subscription;\r\n    purchases: Purchase[];\r\n\r\n    changePledgeShown: boolean;\r\n    pledge: string;\r\n\r\n    creditCard: any;\r\n    cardComplete: boolean;\r\n    cardError: string;\r\n\r\n    birthdayDay: number;\r\n    birthdayMonth: number;\r\n    birthdayYear: number;\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private router: Router,\r\n        private location: Location,\r\n        public _app: AppComponent,\r\n        private fb: FormBuilder,\r\n        private stripeService: StripeService\r\n    ) { }\r\n\r\n    _tools: Tool[] = [\r\n        {\r\n            icon: \"fa-sign-out\",\r\n            name: \"logout\",\r\n            text: \"Log Out\",\r\n            active: false\r\n        }\r\n    ]\r\n\r\n    ngOnInit(): void {\r\n        this.errorCount = 0;\r\n        this.weGood = true;\r\n\r\n        this.user = this._app.user;\r\n\r\n        this.userName = this.user.firstName + ' ' + this.user.lastName;\r\n\r\n        this.renderDescription();\r\n\r\n        if (this.user.birthday) {\r\n            let birthday = new Date(this.user.birthday);\r\n            if (isNaN(birthday.getDate())) {\r\n                birthday = new Date(parseInt(this.user.birthday));\r\n            }\r\n            this.birthdayDay = birthday.getDate();\r\n            this.birthdayMonth = birthday.getMonth();\r\n            this.birthdayYear = birthday.getFullYear();\r\n        }\r\n\r\n        this.userService.fetchPurchases().then(p => {\r\n            this.purchases = p;\r\n        });\r\n\r\n        this.userService.fetchSubscription().then(u => {\r\n            this.subscription = u.subscription;\r\n            \r\n            this.subscription.pledge = this.subscription.pledge || 0;\r\n        });\r\n    }\r\n\r\n    // TODO: this\r\n    canEdit(): boolean {\r\n        return true;\r\n    }\r\n\r\n    selectTab(tab: TabData): void {\r\n        this.selectedTab = tab.id;\r\n        this.changePledgeShown = false;\r\n    }\r\n\r\n    logout(): void {\r\n        this._app.logout();\r\n    }\r\n\r\n    renderDescription(): void {\r\n        this.descriptionHtml = TextUtil.renderDescription(this.user.description);\r\n    }\r\n\r\n    newDescriptionText: string;\r\n    editDescriptionShown: boolean;\r\n    showEditDescription(): void {\r\n        if (this.canEdit()) {\r\n            this.newDescriptionText = this.user.description;\r\n            this.editDescriptionShown = true;\r\n        }\r\n    }\r\n\r\n    cancelDescription(): void {\r\n        this.editDescriptionShown = false;\r\n    }\r\n\r\n    saveDescription(): void {\r\n        this.user.description = this.newDescriptionText;\r\n        this._saveUser();\r\n        this.cancelDescription();\r\n        this.renderDescription();\r\n    }\r\n\r\n    private _saveUser(): void {\r\n        if (this.user && this.user._id) {\r\n            this.userService.updateUser(this.user)\r\n                .then(() => {\r\n                    this.isPosting = false;\r\n                    this.password = '';\r\n                    this.passwordConfirm = '';\r\n                    this._app.toast(\"Your information has been saved!\");\r\n                }, () => {\r\n                    this.isPosting = false;\r\n                });\r\n        }\r\n    }\r\n    \r\n    saveEditName(name: string): void {\r\n        this.user.firstName = name.split(' ')[0];\r\n        this.user.lastName = name.replace(this.user.firstName + ' ', '');\r\n        this._saveUser();\r\n    }\r\n\r\n    saveEditPhone(phone: string): void {\r\n        this.user.phone = phone;\r\n        this._saveUser();\r\n    }\r\n\r\n    saveEditEmail(email: string): void {\r\n        this.user.email = email;\r\n        this._saveUser();\r\n    }\r\n\r\n    saveEditUrl(url: string): void {\r\n        this.user.url = url;\r\n        this._saveUser();\r\n    }\r\n\r\n    saveEditAddress(address: Address): void {\r\n        this.user.address = address.address;\r\n        this.user.city = address.city;\r\n        this.user.state = address.state;\r\n        this.user.zip = address.zip;\r\n        this.user.country = address.country;\r\n\r\n        this._saveUser();\r\n    }\r\n\r\n    onToolClicked(tool: Tool): void {\r\n        this._app.showLoader();\r\n        \r\n        switch (tool.name) {\r\n            case \"logout\":\r\n                this._app.logout();\r\n                break;\r\n        }\r\n    }\r\n\r\n    getDate(date: string): string {\r\n        return TimeUtil.simpleDate(date);\r\n    }\r\n\r\n    getTime(date: string): string {\r\n        return TimeUtil.simpleTime(date);\r\n    }\r\n\r\n    cancelSubscription(): void {\r\n        this._app.toast(\"This button doesn't work yet.\");\r\n    }\r\n\r\n    showChangePledge(): void {\r\n        this.pledge = this.subscription.pledge.toFixed(2);\r\n        this.changePledgeShown = true;\r\n\r\n        this.creditCard = this.stripeService.setupStripe(e => {\r\n            this.cardComplete = e.complete;\r\n\r\n            if (e.error) {\r\n                this.cardError = e.error.message;\r\n            } else {\r\n                this.cardError = '';\r\n            }\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.creditCard.mount('#card-element');\r\n        });\r\n    }\r\n\r\n    pledgeFormValid(): boolean {\r\n        return parseFloat(this.pledge) != this.subscription.pledge &&\r\n                (parseFloat(this.pledge) == 0 || this.cardComplete);\r\n    }\r\n\r\n    savePledge(): void {\r\n\r\n        if (parseFloat(this.pledge) != this.subscription.pledge) {\r\n\r\n            this.isPosting = true;\r\n\r\n            if (this.pledge && this.cardComplete) {\r\n                this.stripeService.getStripeToken(this.creditCard).then(result => {\r\n                    if (result.error) {\r\n                        this.cardError = result.error.message;\r\n                    } else {\r\n                        this._savePledge(result.token);\r\n                    }\r\n                });\r\n            } else {\r\n                this._savePledge();\r\n            }\r\n\r\n        } else {\r\n            this.changePledgeShown = false;\r\n        }\r\n\r\n    }\r\n\r\n    private _savePledge(token?: any): void {\r\n        this.userService.updatePledge(this.pledge, token).then(sub => {\r\n            this.subscription = sub;\r\n            this.changePledgeShown = false;\r\n            this.isPosting = false;\r\n        });\r\n    }\r\n\r\n    saveBirthday(d: Date): void {\r\n        this.user.birthday = d.getTime().toString();\r\n        this._saveUser();\r\n    }\r\n\r\n    saveExperience(l: string): void {\r\n        let level: number;\r\n        level = parseInt(l);\r\n        this.user.improvExp = level;\r\n        console.log(level, l, this.user);\r\n        this._saveUser();\r\n    }\r\n\r\n    savePassword(): void {\r\n        this.passwordMatchError = false;\r\n        if (this.password && this.password === this.passwordConfirm) {\r\n            this.user.password = this.password;\r\n            this._saveUser();\r\n        } else {\r\n            this.passwordMatchError = true;\r\n        }\r\n    }\r\n}\r\n"]}