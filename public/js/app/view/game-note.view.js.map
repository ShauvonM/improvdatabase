{"version":3,"sources":["../../app/src/app/view/game-note.view.ts"],"names":[],"mappings":"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","file":"game-note.view.js","sourcesContent":["import { \r\n    Component,\r\n    OnInit,\r\n    OnChanges,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    ViewChild,\r\n    ViewChildren,\r\n    ElementRef,\r\n    QueryList,\r\n    DoCheck,\r\n    KeyValueDiffers,\r\n    KeyValueDiffer,\r\n    IterableDiffers,\r\n    IterableDiffer\r\n} from '@angular/core';\r\n\r\nimport { TimeUtil } from '../../util/time.util';\r\nimport { PREFERENCE_KEYS } from '../../constants';\r\n\r\nimport { UserService } from '../../service/user.service';\r\n\r\nimport { Game } from '../../model/game';\r\nimport { Note } from '../../model/note';\r\nimport { Tag } from '../../model/tag';\r\nimport { GameMetadata } from '../../model/game-metadata';\r\n\r\nimport { Option } from '../view/editable-metadata.view';\r\n\r\nimport { GameNoteService } from '../service/game-note.service';\r\n\r\nimport { ShrinkAnim } from '../../util/anim.util';\r\n\r\nimport { Util } from '../../util/util';\r\nimport { TextUtil } from '../../util/text.util';\r\n\r\nimport { TeamService } from '../service/team.service';\r\nimport { Team } from '../../model/team';\r\n\r\nimport { FormSwitchDirective } from '../../directive/form-switch.directive';\r\n\r\ninterface DBObject {\r\n    _id: string;\r\n    name: string;\r\n}\r\n\r\nclass TeamOption {\r\n    team: Team;\r\n    selected: boolean;\r\n}\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: '.id-game-note',\r\n    templateUrl: '../template/view/game-note.view.html',\r\n    animations: [ShrinkAnim.height]\r\n})\r\nexport class GameNoteView implements OnInit, OnChanges, DoCheck {\r\n\r\n    @Input() note: Note;\r\n    @Input() game: Game;\r\n\r\n    @Input() showLinks: boolean;\r\n\r\n    @Output() create: EventEmitter<Note> = new EventEmitter();\r\n    @Output() remove: EventEmitter<Note> = new EventEmitter();\r\n\r\n    @ViewChild('description') descriptionElement: ElementRef;\r\n    @ViewChild('noteinput') inputElement: ElementRef;\r\n\r\n    // @ViewChild('noteTeamDirective', {read: FormSwitchDirective}) noteTeamDirective: FormSwitchDirective;\r\n    @ViewChildren(FormSwitchDirective) teamShareDirectives: QueryList<FormSwitchDirective>;\r\n\r\n    descriptionHtml: string;\r\n\r\n    showEdit: boolean;\r\n    editable: boolean;\r\n    showText: boolean;\r\n\r\n    showUserName: boolean = true;\r\n    showTeamShare: boolean;\r\n    modifiedName: string;\r\n\r\n    superAdmin: boolean;\r\n\r\n    isPosting: boolean;\r\n\r\n    noteInput: string;\r\n    noteContext: string;\r\n    noteContextOptions: Option[] = [];\r\n\r\n    notePublic: boolean;\r\n    noteTeam: boolean;\r\n    noteTeamPartial: boolean;\r\n\r\n    showControls: boolean = true;\r\n    showDeleteConfirm: boolean;\r\n\r\n    simpleDate: string;\r\n\r\n    teamSelection: TeamOption[] = [];\r\n\r\n    gameDiffer: KeyValueDiffer<string, any>;\r\n    tagDiffer: IterableDiffer<DBObject>;\r\n    nameDiffer: KeyValueDiffer<string, any>;\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private noteService: GameNoteService,\r\n        private teamService: TeamService,\r\n        private keyValueDiffers: KeyValueDiffers,\r\n        private iterableDiffers: IterableDiffers\r\n    ) {\r\n    }\r\n    \r\n    ngOnInit() {\r\n\r\n        this.superAdmin = this.userService.isSuperAdmin();\r\n\r\n        if (this.userService.getTeams().length || this.userService.getAdminTeams().length) {\r\n            this.showTeamShare = true;\r\n        }\r\n\r\n        if (!this.note) {\r\n            setTimeout(() => {\r\n                this.setupNoteEdit();\r\n            }, 100);\r\n        } else {\r\n            let user = this.userService.getLoggedInUser();\r\n\r\n            if (this.note.addedUser._id == user._id) {\r\n                this.showUserName = false;\r\n            }\r\n\r\n            if (this.note.modifiedUser && this.note.addedUser._id != this.note.modifiedUser._id) {\r\n                this.modifiedName = '<em>(edited by ' + this.note.modifiedUser.firstName + ' ' + this.note.modifiedUser.lastName + ')</em>';\r\n            }\r\n\r\n            this.renderDescription();\r\n            this.showText = true;\r\n\r\n            if (this.superAdmin || this.note.addedUser._id == user._id) {\r\n                this.editable = true;\r\n            }\r\n\r\n            this.note.teams.forEach(team => {\r\n                if (Util.indexOfId(user.adminOfTeams, team) > -1) {\r\n                    this.editable = true;\r\n                }\r\n            });\r\n\r\n            this.simpleDate = TimeUtil.postTime(this.note.dateModified);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        if (this.game) {\r\n            // this checks the game object to see if the values have changed\r\n            let gameChanges = this.gameDiffer.diff(this.game),\r\n                tagChanges = this.tagDiffer.diff(<DBObject[]> this.game.tags),\r\n                nameChanges;\r\n\r\n            if (this.game.names.length) {\r\n                nameChanges = this.nameDiffer.diff(this.game.names[0]);\r\n            }\r\n\r\n            if (gameChanges || tagChanges || nameChanges) {\r\n                this.setupContextOptions();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: any): void {\r\n        // console.log('note changes?', changes);\r\n        if (changes.game) {\r\n            if (this.game) {\r\n                this.gameDiffer = this.keyValueDiffers.find(this.game).create();\r\n                this.tagDiffer = this.iterableDiffers.find(this.game.tags).create();\r\n                if (this.game.names.length) {\r\n                    this.nameDiffer = this.keyValueDiffers.find(this.game.names[0]).create();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setupDebounce: any;\r\n    setupContextOptions(): void {\r\n        clearTimeout(this.setupDebounce);\r\n        this.setupDebounce = setTimeout(() => {\r\n            this._setupContextOptions();\r\n        }, 100)\r\n    }\r\n\r\n    private _setupContextOptions(): void {\r\n        this.noteContextOptions = [];\r\n\r\n        if (!this.game) {\r\n            return;\r\n        }\r\n\r\n        if (this.game.names.length) {\r\n            this.noteContextOptions.push({\r\n                name: 'This game: ' + this.game.names[0].name,\r\n                _id: 'game',\r\n                icon: 'rocket',\r\n                description: 'This note will only apply to this game.'\r\n            });\r\n        }\r\n        if (this.game.playerCount) {\r\n            this.noteContextOptions.push({\r\n                name: this.game.playerCount.name + ' Players',\r\n                _id: 'metadata_' + this.game.playerCount._id,\r\n                icon: 'users',\r\n                description: 'This note will apply to any game involving \\'' + this.game.playerCount.name + '\\' player count.'\r\n            });\r\n        }\r\n        if (this.game.duration) {\r\n            this.noteContextOptions.push({\r\n                name: this.game.duration.name,\r\n                _id: 'metadata_' + this.game.duration._id,\r\n                icon: 'users',\r\n                description: 'This note will apply to any game involving \\'' + this.game.duration.name + '\\' duration.'\r\n            });\r\n        }\r\n\r\n        if (this.game.tags) {\r\n            (<Tag[]> this.game.tags).forEach(tag => {\r\n                this.noteContextOptions.push({\r\n                    name: tag.name,\r\n                    _id: 'tag_' + tag._id,\r\n                    icon: 'hashtag',\r\n                    description: 'This note will apply to any game tagged \\'' + tag.name + '\\'.'\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    renderDescription(): void {\r\n        if (this.note && this.note.description) {\r\n            this.descriptionHtml = TextUtil.getMarkdownConverter().makeHtml(this.note.description);\r\n        } else {\r\n            this.descriptionHtml = '';\r\n        }\r\n    }\r\n\r\n    setupNoteEdit(): void {\r\n        if (this.note && !this.editable) {\r\n            return;\r\n        }\r\n        this.showText = false;\r\n\r\n        let delay = this.note ? 100 : 1;\r\n\r\n        setTimeout(() => {\r\n            this.showEdit = true;\r\n\r\n            this.noteContext = '';\r\n\r\n            if (this.note) {\r\n                this.noteInput = this.note.description;\r\n                if (!this.note.teams || !this.note.teams.length) {\r\n                    this.noteTeam = false;\r\n                }\r\n                if (this.note.game) {\r\n                    this.noteContext = 'game';\r\n                } else if (this.note.metadata) {\r\n                    this.noteContext = 'metadata_' + (<GameMetadata> this.note.metadata)._id;\r\n                } else if (this.note.tag) {\r\n                    this.noteContext = 'tag_' + (<Tag> this.note.tag)._id;\r\n                }\r\n\r\n                this.notePublic = this.note.public;\r\n            } else {\r\n                this.noteTeam = this.userService.getPreference(PREFERENCE_KEYS.shareNotesWithTeam, 'false') == 'true';\r\n            }\r\n\r\n            this.teamSelection = [];\r\n            this.teamService.fetchTeams().then(user => {\r\n                let teams = [].concat(user.adminOfTeams, user.memberOfTeams),\r\n                    noteTeams = this.note ? this.note.teams : [];\r\n                teams.forEach(team => {\r\n                    this.teamSelection.push({\r\n                        team: team,\r\n                        selected: Util.indexOfId(noteTeams, team) > -1\r\n                    });\r\n                })\r\n                this.toggleTeamSelection();\r\n            });\r\n\r\n        }, delay);\r\n\r\n    }\r\n\r\n    cancelEdit(): void {\r\n        this.showEdit = false;\r\n        this.showText = false;\r\n        setTimeout(() => {\r\n            this.showText = true;\r\n        }, 200);\r\n    }\r\n\r\n    setNoteContext(context: Option): void {\r\n        this.noteContext = context._id;\r\n    }\r\n\r\n    saveNote(): void {\r\n        if (!this.noteContext) {\r\n            this.noteContext = this.noteContextOptions[0]._id;\r\n        }\r\n\r\n        let note = this.note || new Note();\r\n\r\n        note.description = this.noteInput;\r\n        this.renderDescription();\r\n        \r\n        if (this.noteContext == 'game') {\r\n            note.game = this.game._id;\r\n        } else if (this.noteContext.indexOf('tag_') > -1) {\r\n            note.tag = this.noteContext.replace('tag_', '');\r\n        } else if (this.noteContext.indexOf('metadata_') > -1) {\r\n            note.metadata = this.noteContext.replace('metadata_', '');\r\n        }\r\n\r\n        note.public = this.notePublic;\r\n\r\n        // if (this.noteTeam) {\r\n        //     note.teams = [].concat(this.userService.getTeams(), this.userService.getAdminTeams());\r\n        // } else {\r\n        //     note.teams = [];\r\n        // }\r\n        note.teams = [];\r\n        if (this.teamSelection.length) {\r\n            this.teamSelection.forEach(team => {\r\n                if (team.selected) {\r\n                    note.teams.push(team.team);\r\n                }\r\n            })\r\n        }\r\n        this.userService.setPreference(PREFERENCE_KEYS.shareNotesWithTeam, this.noteTeam);\r\n\r\n        this.isPosting = true;\r\n\r\n        if (this.note) {\r\n\r\n            this.noteService.updateNote(note).then(note => {\r\n                this.isPosting = false;\r\n                this.cancelEdit();\r\n            });\r\n\r\n        } else {\r\n\r\n            this.noteService.createNote(note).then(note => {\r\n                this.isPosting = false;\r\n                this.noteInput = '';\r\n                this.create.emit(note);\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    deleteNote(): void {\r\n        this.showControls = false;\r\n        setTimeout(() => {\r\n            this.showDeleteConfirm = true;\r\n        }, 250);\r\n    }\r\n\r\n    cancelDelete(): void {\r\n        this.showDeleteConfirm = false;\r\n        setTimeout(() => {\r\n            this.showControls = true;\r\n        }, 250);\r\n    }\r\n\r\n    doDeleteNote(): void {\r\n        this.noteService.deleteNote(this.note).then(() => {\r\n            this.remove.emit(this.note);\r\n        });\r\n    }\r\n\r\n    teamShareToggle(): void {\r\n        setTimeout(() => {\r\n            this.teamSelection.forEach(team => {\r\n                team.selected = this.noteTeam;\r\n            });\r\n            this.noteTeamPartial = false;\r\n            this.checkAllSwitches();\r\n        });\r\n    }\r\n\r\n    toggleTeamSelection(index?: number): void {\r\n        setTimeout(() => {\r\n            let pass = true,\r\n                partial = false;\r\n            this.teamSelection.forEach(team => {\r\n                if (!team.selected) {\r\n                    pass = false;\r\n                } else {\r\n                    partial = true;\r\n                }\r\n            });\r\n            this.noteTeam = pass;\r\n            this.noteTeamPartial = partial && !pass;\r\n            this.checkAllSwitches();\r\n        })\r\n    }\r\n\r\n    checkAllSwitches(): void {\r\n        this.teamShareDirectives.forEach(item => {\r\n            item.check();\r\n        });\r\n    }\r\n\r\n}"]}