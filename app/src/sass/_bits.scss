@import 'vars';
@import './mixins/elevation';

.error {
    color: darkred;

    &select {
        border-color: darkred;
    }
}

iplus {
    display: inline-block;
    cursor: default;

    &.white .iplus {
        color: $color-white;
    }
}

.iplus {
    display: inline-block;
    min-width: 24px;
    height: 24px;
    text-align: center;
    position: relative;
    font-size: 20px;
    white-space: nowrap;

    &.white {
        // background-position: -24px 0;
        color: $color-white;
    }

    & > * {
        position: absolute;
    }

    .bracket {
        font-size: 100%;
        top: 0px;
        left: 2px;

        &:last-child {
            left: auto;
            right: 2px;
        }
    }
    .i {
        font-size: 83%;
        font-weight: bold;
        left: 6px;
        top: 5px;
        transition: color 300ms;
    }
    .plus {
        font-size: 70%;
        font-weight: bold;
        top: 2px;
        left: 10px;
        transition: color 300ms;
    }

    .text {
        width: auto;
        max-width: 0px;
        overflow: hidden;
        transition: max-width 500ms, margin 300ms;
        font-size: 70%;
        line-height: 24px;
        position: static;
        display: block;
        margin: 0 4px 0 19px;
    }

    &:hover {
        .plus {
            color: $color-primary;
        }
        .text {
            max-width: 100px;
            margin: 0 7px 0 19px;
        }
    }
}

.loading-icon {
    position: absolute;
    display: block;
    width: 55px;
    height: 55px;
    top: 35%;
    left: 50%;
    margin: -27px 0 0 -27px;
    z-index: 2;
    animation: spin 1000ms 1000ms infinite;

    .small-face {
        fill: $color-primary;
        stroke: $color-secondary;
    }
}

.loading-icon-shadow {
    @extend .loading-icon;
    z-index: 1;
    width: 85px;
    height: 125px;
    margin: -27px 0 0 -37px;
    transform-origin: 37px 40px 0px;

    .small-face {
        fill: rgba(0,0,0,0.3);
        stroke: none;
    }
}

#siteLoader {
    @include fixed(0, 0, 0, 0, 5000);
}

#cornerLogo {
    position: fixed;
    bottom: 0;
    right: 0;
    z-index: 1;
    text-indent: -9999em;
    width: 100%;
    height: auto;
    text-align: right;

    img {
        max-width: 100%;
    }
}

.backdrop {
    @include fixed(0,100%,0,0);
    z-index: 400;
    background: $color-shade;
    opacity: 0;
    transition: opacity $swift-ease-out-duration $swift-ease-out-timing-function, right 0ms $swift-ease-out-duration;

    &.show {
        transition: opacity $swift-ease-out-duration $swift-ease-out-timing-function;
        right: 0px;
        opacity: 1;
    }
}

.clearfix {
    clear: both;
}

.invisible {
    visibility: hidden !important;
}

.hide {
    display: none !important;
}

.clickable {
    cursor: pointer;
}

.dull {
    opacity: 0.5;
}

.block {
    margin-bottom: $large;
}

.right {
    text-align: right;
}

.center {
    text-align: center;
}

.scroll {
    overflow: auto;

    &:after {
        @include abs(null, -10px, 0, 10px, 5);
        box-shadow: 0 -5px 10px rgba(0,0,0,0.4);
    }
}

.columns {
    display: flex;
    flex-direction: row;

    & > * {
        margin-right: $std;
        width: 100%;

        &:last-child {
            margin-right: 0;
        }
    }

    & > input {
        margin-top: 0px;
    }

    & > input[name="state"] {
        width: 2em;
        text-align: center;
    }
}

.button-group {
    margin-top: $std;
    text-align: right;
}

button,
.button {
    border-radius: $border-radius;
    line-height: $button-height;
    height: $button-height;
    padding: 0 $std;
    min-width: $button-min-width;
    text-align: center;
    margin: 0 $std;
    display: inline-block;
    color: $color-primary;
    border: 0px;
    cursor: pointer;
    width: auto;
    box-sizing: border-box;
    background: none;
    text-transform: uppercase;
    text-decoration: none;

    @include md-elevation-transition(opacity $anim-duration);

    &.raised {
        background-color: $color-primary;
        color: $color-primary-text;
        @include md-elevation(0);
        
        &:hover {
            @include md-elevation($raised-button-elevation);
        }
        &:active {
            @include md-elevation($raised-button-pressed-elevation);
        }
    }

    &.brackets {
        @include md-elevation(0);
        position: relative;
        transition: color 200ms;

        &:before,
        &:after {
            content: "";
            width: 1em;
            border-style: solid;
            border-color: $color-primary;
            transition: width 200ms, border-color 200ms;
        }

        &:before {
            @include abs(0, null, 0, 0);
            border-width: 3px 0 3px 3px;
        }

        &:after {
            @include abs(0, 0, 0, null);
            border-width: 3px 3px 3px 0;
        }
        
        &:hover {
            @include md-elevation($raised-button-elevation);

            &:before,
            &:after {
                width: 50%;
            }
        }
        &:active {
            @include md-elevation($raised-button-pressed-elevation);
        }
    }

    &[disabled] {
        opacity: 0.5;

        &:hover {
            @include md-elevation(0);
        }
    }

    &.fab {
        @include fixed(null, ($std * 2), $std, null, 500);
        font-size: $fab-icon-size;
        background: $color-primary;
        color: $color-primary-text;
        width: $fab-width;
        height: $fab-width;
        border-radius: 50%;
        padding: 0;
        min-width: 0;
        margin: 0;
        line-height: $fab-icon-size;

        @include md-elevation(6);
        @include md-elevation-transition();

        &:hover {
            @include md-elevation(12);
        }
    }
}

.list {
    padding: 0;

    .item {
        padding: $std;
        border-bottom: 1px solid $color-hr;
        display: flex;
        flex-direction: row;
        align-items: center;

        &:last-child {
            border-bottom: 0px;
        }

        .badge {
            font-size: 24px;
            padding-right: 16px;

            i {
                text-align: center;
                width: 24px;
                height: 24px;
            }
        }

        .metadata {
            overflow: hidden;

            .row {
                display: flex;
                flex-direction: row;
                align-items: center;

                &:first-child {
                    margin-bottom: $small;
                }
                
                @media #{$media-mobile} {
                    & > *:last-child {
                        display: none;
                    }
                }
            }

            h5 {
                margin: 0 ($large * 2) 0 0;
                white-space: nowrap;
                font-size: 16px;
                font-weight: bold;
            }
            .ellipsise {
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
                font-size: 12px;
                
                p {
                    display: inline-block;
                    margin: 0;
                }

                ul, ol, blockquote {
                    display: none;
                }
            }
            span {
                margin: 0 $std 0 0;
            }
        }
    }
} // end of .list

.metadata {
    & > span {
        display: inline-block;
        vertical-align: middle;
        margin: ($small / 2) 0;
        
        line-height: 18px;

        &:last-child {
            border-right: 0px;
            margin-right: 0px;
            padding-right: 0px;
        }

        &.bullet:after {
            content: "\2022";
            margin: 0 ($small / 2);
        }
        
        select {
            padding: 0;
            margin: 0;
            display: inline-block;
            width: auto;
        }
    }

    i {
        width: 16px;
        height: 14px;
        text-align: center;
        display: inline-block;

        &.fa-sort-down {
            transform-origin: 50% 75%;
            transition: transform 100ms $swift-ease-in-out-timing-function;
            position: relative;
            top: -2px;

            &.open {
                transform: rotateZ(180deg);
            }
        }
    }
} // end of .metadata

.taglist {
    padding: 0;

    li {
       display: inline-block;
       margin: $tag-spacing;
       padding: $tag-padding-vertical $tag-padding-horizontal;
       background: $color-primary;
       color: $color-primary-text;
       border-radius: $tag-border-radius;
       position: relative;
       font-size: 13px;
       transition: all 200ms;

       @include md-elevation(1);

       .fa {
           font-size: 0.9em;
           line-height: 14px;
       }

       &.flat {
           background: none;
           @include md-elevation(0);
           color: $color-primary;
           opacity: 0;
           transition: opacity 200ms;
       }

       input {
           padding: 0;
           border: 0;
           margin: 0 2px;
           width: 100px;
           font-size: 13px;
           display: inline-block;
           color: $color-primary-text;
       }

       .tag-hints {
           position: absolute;
           top: 100%;
           padding: 0;

           li {
                display: block;
                margin: $tag-spacing * 2;
                @include md-elevation(8);
                margin-left: $std;

                &.hover, &:hover {
                    @include md-elevation(11);
                    margin-right: $tag-spacing;
                    margin-left: $small;
                    padding-left: $tag-padding-vertical + $small;
                    padding-right: $tag-padding-horizontal + $tag-spacing;
                }
            }
       }
    }

    &:hover {
        .flat {
            opacity: 1;
        }
    }
} // end of .taglist

.dialog-container {
    display: flex;
    justify-content: center;
    align-items: center;
    @include fixed(0, 0, 0, 0, 0);

    &.show {
        z-index: 500;
    }
}

.dialog {
    width: 90%;
    max-width: 500px;
    background: $color-white;
    padding: $std 0;
    border-radius: $border-radius;
    // @include fixed(50%, null, null, 50%, 5000);
    // transform: translate(-50%, -50%);

    @include md-elevation(24);

    .dialog-content {
        padding: 0 $std;
    }

    h2 {
        color: $color-primary;
        font-size: 28px;
        text-align: center;
    }
}

.loading {
    display: inline-block;
    overflow: hidden;
    height: 1.3em;
    margin-top: -0.3em;
    line-height: 1.5em;
    vertical-align: text-bottom;

    &:after {
        display: inline-table;
        white-space: pre;
        text-align: left;
        content: " ●    \A   ●   \A    ●  \A     ● \A      ●\A     ● \A    ●  \A   ●   \A  ●    \A ●     ";
        animation: loadingSpin 1s steps(10) infinite;
    }
}