{"version":3,"sources":["../../src/ts/util/webstorage.util.ts"],"names":[],"mappings":"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","file":"webstorage.util.js","sourcesContent":["import { Injectable, NgModule } from \"@angular/core\";\r\n\r\n// https://github.com/marcj/angular2-localstorage\r\n\r\nconst KEY_PREFIX = 'improvplus';\r\n\r\nexport class WebStorageUtility {\r\n    static generateStorageKey(key: string): string {\r\n        return `${KEY_PREFIX}_${key}`;\r\n    }\r\n\r\n    static get(storage: Storage, key: string): any {\r\n        let storageKey = WebStorageUtility.generateStorageKey(key);\r\n        let value = storage.getItem(storageKey);\r\n        return WebStorageUtility.getGettable(value);\r\n    }\r\n\r\n    static set(storage: Storage, key: string, value: any): void {\r\n\r\n        let storageKey = WebStorageUtility.generateStorageKey(key);\r\n        storage.setItem(storageKey, WebStorageUtility.getSettable(value));\r\n    }\r\n\r\n    static remove(storage: Storage, key: string): void {\r\n        let storageKey = WebStorageUtility.generateStorageKey(key);\r\n        storage.removeItem(storageKey);\r\n    }\r\n\r\n    private static getSettable(value: any): string {\r\n        return typeof value === 'string' ? value : JSON.stringify(value);\r\n    }\r\n\r\n    private static getGettable(value: string): any {\r\n        try {\r\n            return JSON.parse(value);\r\n        } catch(e) {\r\n            return value;\r\n        }\r\n    }\r\n}\r\n\r\nexport class WebStorageService {\r\n    constructor(private storage: Storage) {}\r\n\r\n    get(key: string): any {\r\n        return WebStorageUtility.get(this.storage, key);\r\n    }\r\n\r\n    set(key: string, value: any): void {\r\n        WebStorageUtility.set(this.storage, key, value);\r\n    }\r\n\r\n    remove(key: string): void {\r\n        WebStorageUtility.remove(this.storage, key);\r\n    }\r\n\r\n    clear(): void {\r\n        this.storage.clear();\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class LocalStorageService extends WebStorageService {\r\n    constructor() {\r\n        super(localStorage);\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class SessionStorageService extends WebStorageService {\r\n    constructor() {\r\n        super(sessionStorage);\r\n    }\r\n}\r\n\r\nexport function LocalStorage(key?: string) {\r\n    return WebStorage(localStorage, key);\r\n}\r\n\r\nexport function SessionStorage(key?: string) {\r\n    return WebStorage(sessionStorage, key);\r\n}\r\n\r\n// let cache = {};\r\n\r\nexport let WebStorage = (webStorage: Storage, key: string) => {\r\n    return (target: Object, propertyName: string): void => {\r\n        key = key || propertyName;\r\n\r\n        let storageKey = WebStorageUtility.generateStorageKey(key);\r\n        let storedValue = WebStorageUtility.get(webStorage, key);\r\n\r\n        Object.defineProperty(target, propertyName, {\r\n            get: function() {\r\n                return WebStorageUtility.get(webStorage, key);\r\n            },\r\n            set: function(value: any) {\r\n                // I don't get the purpose of this, other than to break this code\r\n                // if (!cache[key]) {\r\n                //     if (storedValue === null) {\r\n                //         WebStorageUtility.set(webStorage, key, value);\r\n                //     }\r\n\r\n                //     cache[key] = true;\r\n                //     return;\r\n                // }\r\n\r\n                WebStorageUtility.set(webStorage, key, value);\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    providers: [LocalStorageService, SessionStorageService]\r\n})\r\nexport class WebStorageModule {}"]}