{"version":3,"sources":["../../src/ts/component/signup.component.ts"],"names":[],"mappings":"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","file":"signup.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { UserService } from '../service/user.service';\r\n\r\nimport { Config } from '../config';\r\n\r\nimport { User } from '../model/user';\r\n\r\ndeclare var Stripe: any;\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: \"signup\",\r\n    templateUrl: '../template/signup.component.html'\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n    user: User;\r\n\r\n    isPostion: boolean = false;\r\n\r\n    step: number = 1;\r\n\r\n    stripe: any;\r\n    card: any;\r\n    cardError: string;\r\n\r\n    constructor(\r\n        private _app: AppComponent,\r\n        private router: Router,\r\n        private userService: UserService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        \r\n        this.user = new User();\r\n        this.user.improvExp = 1;\r\n        this.user.facilitationExp = 1;\r\n\r\n    }\r\n\r\n    saveUser(user: User): void {\r\n\r\n        this.user = user;\r\n        this.step = 3;\r\n\r\n        setTimeout(() => {\r\n            this.stripe = Stripe(Config.STRIPE_KEY);\r\n            let elements = this.stripe.elements();\r\n            this. card = elements.create('card', {\r\n                style: {\r\n                    base: {\r\n                        color: '#32325d',\r\n                        lineHeight: '24px',\r\n                        fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n                        fontSmoothing: 'antialiased',\r\n                        fontSize: '16px',\r\n\r\n                        '::placeholder': {\r\n                            color: 'rgba(96,96,96,0.5)'\r\n                        }\r\n                    },\r\n                    invalid: {\r\n                        color: '#fa755a',\r\n                        iconColor: '#fa755a'\r\n                    }\r\n                }\r\n            });\r\n            this.card.mount('#card-element');\r\n\r\n            this.card.addEventListener('change', e => {\r\n                if (e.error) {\r\n                    this.cardError = e.error.message;\r\n                } else {\r\n                    this.cardError = '';\r\n                }\r\n            });\r\n        }, 100)\r\n\r\n    }\r\n\r\n    back(): void {\r\n        this.step = 1;\r\n    }\r\n\r\n    submitPayment(): void {\r\n\r\n        this.stripe.createToken(this.card).then(result => {\r\n            if (result.error) {\r\n                this.cardError = result.error.message;\r\n            } else {\r\n                let token = result.token;\r\n                console.log('token!', this.user, token);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n}\r\n"]}