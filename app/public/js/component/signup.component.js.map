{"version":3,"sources":["../../src/ts/component/signup.component.ts"],"names":[],"mappings":"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","file":"signup.component.js","sourcesContent":["import { \r\n    Component,\r\n    OnInit,\r\n    ViewChild,\r\n    ViewChildren,\r\n    QueryList,\r\n    ElementRef\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { UserService } from '../service/user.service';\r\nimport { LibraryService } from '../service/library.service';\r\nimport { CartService } from '../service/cart.service';\r\n\r\nimport { Config } from '../config';\r\n\r\nimport { User } from '../model/user';\r\nimport { Package } from '../model/package';\r\n\r\nimport { FadeAnim, DialogAnim, CardAnim } from '../util/anim.util';\r\n\r\ndeclare var Stripe: any;\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: \"signup\",\r\n    templateUrl: '../template/signup.component.html',\r\n    animations: [\r\n        FadeAnim.fadeAbsolute,\r\n        DialogAnim.dialogSlow\r\n    ]\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n    @ViewChild('facilitatorCard') facilitatorCard: ElementRef;\r\n    @ViewChild('improviserCard') improviserCard: ElementRef;\r\n    @ViewChild('yourselfCard') yourselfCard: ElementRef;\r\n    @ViewChild('yourTeamCard') yourTeamCard: ElementRef;\r\n    @ViewChildren('packageCard') packageCards: QueryList<ElementRef>;\r\n\r\n    userType: string;\r\n    teamOption: string;\r\n\r\n    email: string;\r\n    password: string;\r\n    teamName: string;\r\n    userName: string;\r\n\r\n    packages: Package[];\r\n    selectedPackage: Package;\r\n    isLoadingPackages: boolean = false;\r\n\r\n    isPosting: boolean = false;\r\n\r\n    stripe: any;\r\n    card: any;\r\n\r\n    emailError: string;\r\n    cardError: string;\r\n\r\n    cardComplete: boolean = false;\r\n\r\n    constructor(\r\n        private _app: AppComponent,\r\n        private router: Router,\r\n        private userService: UserService,\r\n        private libraryService: LibraryService,\r\n        private cartService: CartService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this._app.showBackground(true);\r\n\r\n        this.isLoadingPackages = true;\r\n        this.libraryService.getPackages().then(packages => {\r\n            this.isLoadingPackages = false;\r\n        });\r\n\r\n        this.stripe = Stripe(Config.STRIPE_KEY);\r\n        let elements = this.stripe.elements();\r\n        this.card = elements.create('card', {\r\n            // value: {postalCode: this.user.zip},\r\n            style: {\r\n                base: {\r\n                    color: '#32325d',\r\n                    lineHeight: '24px',\r\n                    fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n                    fontSmoothing: 'antialiased',\r\n                    fontSize: '16px',\r\n\r\n                    '::placeholder': {\r\n                        color: 'rgba(96,96,96,0.5)'\r\n                    }\r\n                },\r\n                invalid: {\r\n                    color: '#fa755a',\r\n                    iconColor: '#fa755a'\r\n                }\r\n            }\r\n        });\r\n\r\n        this.card.addEventListener('change', e => {\r\n            \r\n            this.cardComplete = e.complete;\r\n\r\n            if (e.error) {\r\n                this.cardError = e.error.message;\r\n            } else {\r\n                this.cardError = '';\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    selectCard(option: string, value: string, cardToOpen: HTMLElement, cardToClose: HTMLElement): void {\r\n        if (this[option] == value) {\r\n            return;\r\n        }\r\n\r\n        this[option] = '';\r\n        if (option == 'userType') {\r\n            this.teamOption = '';\r\n        }\r\n        if (option == 'teamOption') {\r\n            this.userName = '';\r\n            this.teamName = '';\r\n            this.showPackages(value == 'team');\r\n        }\r\n\r\n        CardAnim.openCard(cardToOpen, 200);\r\n        CardAnim.closeCard(cardToClose, 200);\r\n\r\n        setTimeout(() => {\r\n            this[option] = value;\r\n        }, 400);\r\n    }\r\n\r\n    reset(): void {\r\n        this._app.scrollTo(0, 600);\r\n\r\n        setTimeout(() => {\r\n            this.userType = '';\r\n            this.teamOption = '';\r\n\r\n            this.email = '';\r\n            this.password = '';\r\n            this.userName = '';\r\n            this.teamName = '';\r\n            this.selectedPackage = null;\r\n\r\n            CardAnim.openCard(this.facilitatorCard.nativeElement, 200);\r\n            CardAnim.openCard(this.improviserCard.nativeElement, 200);\r\n        }, 600);\r\n    }\r\n\r\n    selectFacilitator(): void {\r\n        this.selectCard('userType', 'facilitator', \r\n            this.facilitatorCard.nativeElement, this.improviserCard.nativeElement);\r\n    }\r\n\r\n    selectImproviser(): void {\r\n        this.selectCard('userType', 'improviser', \r\n            this.improviserCard.nativeElement, this.facilitatorCard.nativeElement);\r\n    }\r\n\r\n    selectYourself(): void {\r\n        this.selectCard('teamOption', 'individual', \r\n            this.yourselfCard.nativeElement, this.yourTeamCard.nativeElement);\r\n    }\r\n\r\n    selectYourTeam(): void {\r\n        this.selectCard('teamOption', 'team',\r\n            this.yourTeamCard.nativeElement, this.yourselfCard.nativeElement);\r\n    }\r\n\r\n    showPackages(team: boolean): void {\r\n        this.selectedPackage = null;\r\n\r\n        this.libraryService.getPackages(this.userType, team).then(p => {\r\n            this.packages = p;\r\n        });\r\n    }\r\n\r\n    selectPackage($event, pack: Package, cardClicked: HTMLElement): void {\r\n        if (pack == this.selectedPackage) {\r\n            return;\r\n        }\r\n\r\n        this.selectedPackage = null;\r\n\r\n        this.packageCards.forEach(card => {\r\n            if (card.nativeElement != cardClicked) {\r\n                CardAnim.closeCard(card.nativeElement, 200);\r\n            }\r\n        });\r\n        CardAnim.openCard(cardClicked, 200);\r\n\r\n        setTimeout(() => {\r\n            this.selectedPackage = pack;\r\n\r\n            // setup the stripe credit card input\r\n            this.card.unmount();\r\n            setTimeout(() => {\r\n                this.card.mount('#card-element');\r\n            }, 400)\r\n        }, 200);\r\n    }\r\n\r\n    isFormValid(): boolean {\r\n        if (!this.email) {\r\n            return false;\r\n        }\r\n        if (!this.password) {\r\n            return false;\r\n        }\r\n        if (!this.teamOption || !this.userType) {\r\n            return false;\r\n        }\r\n        if (this.teamOption == 'team' && !this.teamName) {\r\n            return false;\r\n        }\r\n        if (this.teamOption == 'individual' && !this.userName) {\r\n            return false;\r\n        }\r\n        if (this.cardError || !this.cardComplete) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    submitPayment(): void {\r\n        if (!this.isFormValid()) {\r\n            return;\r\n        }\r\n\r\n        let user = new User();\r\n        if (this.userName && this.userName.length) {\r\n            let nameArray = this.userName.split(' ');\r\n            if (nameArray[0]) {\r\n                user.firstName = nameArray[0];\r\n            }\r\n            if (nameArray[1]) {\r\n                user.lastName = nameArray[1];\r\n            }\r\n        }\r\n        user.email = this.email;\r\n        user.password = this.password;\r\n\r\n        this._app.showLoader();\r\n        this.isPosting = true;\r\n\r\n        this.stripe.createToken(this.card).then(result => {\r\n            if (result.error) {\r\n                this.cardError = result.error.message;\r\n            } else {\r\n                this.cartService.setUser(user);\r\n\r\n                this.cartService.charge(result.token)\r\n                    .catch(response => {\r\n                        this._app.hideLoader();\r\n                        this.isPosting = false;\r\n                        let msg = response.json();\r\n                        if (msg.error && msg.error == 'email already exists') {\r\n                            this.emailError = \"That email address is already registered.\";\r\n                            let card: HTMLElement = this.facilitatorCard.nativeElement;\r\n                            this._app.scrollTo(card.offsetTop, 600);\r\n                        }\r\n                    })\r\n                    .then(u => {\r\n                        this._app.hideLoader();\r\n                        if (u) {\r\n                            return this.userService.login(user.email, user.password);\r\n                        }\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    // step1(): void {\r\n    //     this.step = 1;\r\n    //     this.cartService.reset();\r\n    // }\r\n\r\n    // selectPackage(pack: Package): void {\r\n    //     this.selectedPackage = pack;\r\n    //     this.cartService.addPackage(pack);\r\n    //     this.showUser();\r\n    // }\r\n\r\n    // showUser(): void {\r\n    //     this.step = 2;\r\n    // }\r\n\r\n    // saveUser(user: User): void {\r\n\r\n    //     if (!user || !user.email) {\r\n    //         return;\r\n    //     }\r\n\r\n    //     this.user = user;\r\n    //     this.cartService.setUser(this.user);\r\n\r\n    //     this.step = 3;\r\n\r\n    //     // let button = document.querySelector('.button.raised'),\r\n    //     //     color = document.defaultView.getComputedStyle(button)['background-color'];\r\n\r\n    //     // setup the stripe credit card input\r\n    //     setTimeout(() => {\r\n    //         this.stripe = Stripe(Config.STRIPE_KEY);\r\n    //         let elements = this.stripe.elements();\r\n    //         this.card = elements.create('card', {\r\n    //             value: {postalCode: this.user.zip},\r\n    //             style: {\r\n    //                 base: {\r\n    //                     color: '#32325d',\r\n    //                     lineHeight: '24px',\r\n    //                     fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n    //                     fontSmoothing: 'antialiased',\r\n    //                     fontSize: '16px',\r\n\r\n    //                     '::placeholder': {\r\n    //                         color: 'rgba(96,96,96,0.5)'\r\n    //                     }\r\n    //                 },\r\n    //                 invalid: {\r\n    //                     color: '#fa755a',\r\n    //                     iconColor: '#fa755a'\r\n    //                 }\r\n    //             }\r\n    //         });\r\n    //         this.card.mount('#card-element');\r\n\r\n    //         this.card.addEventListener('change', e => {\r\n                \r\n    //             this.cardComplete = e.complete;\r\n\r\n    //             if (e.error) {\r\n    //                 this.cardError = e.error.message;\r\n    //             } else {\r\n    //                 this.cardError = '';\r\n    //             }\r\n    //         });\r\n\r\n    //     }, 100)\r\n\r\n    // }\r\n\r\n    // submitPayment(): void {\r\n    //     if (this.cardError || !this.cardComplete) {\r\n    //         return;\r\n    //     }\r\n\r\n    //     this.isPosting = true;\r\n    //     this.stripe.createToken(this.card).then(result => {\r\n    //         if (result.error) {\r\n    //             this.cardError = result.error.message;\r\n    //         } else {\r\n    //             this.cartService.charge(result.token)\r\n    //                 .catch(response => {\r\n    //                     this.isPosting = false;\r\n    //                     let msg = response.json();\r\n    //                     if (msg.error && msg.error == 'email already exists') {\r\n    //                         this.showUser();\r\n    //                     }\r\n    //                 })\r\n    //                 .then(user => {\r\n    //                     if (user) {\r\n    //                         return this.userService.login(this.user.email, this.user.password);\r\n    //                     }\r\n    //                 });\r\n    //         }\r\n    //     });\r\n\r\n    // }\r\n\r\n}\r\n"]}