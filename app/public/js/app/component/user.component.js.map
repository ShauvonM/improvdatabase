{"version":3,"sources":["../../src/ts/app/component/user.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAIuB;AACvB,0CAAyC;AACzC,0CAA2C;AAC3C,wCAAqE;AAErE,+DAA6D;AAG7D,2DAAyD;AAIzD,IAAM,YAAY,GAAG,CAAC,CAAC;AAOvB,IAAa,aAAa;IAoBtB,uBACY,WAAwB,EACxB,MAAc,EACd,QAAkB,EAClB,IAAkB,EAClB,EAAe;QAJf,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAU;QAClB,SAAI,GAAJ,IAAI,CAAc;QAClB,OAAE,GAAF,EAAE,CAAa;QAvB3B,UAAK,GAAW,SAAS,CAAC;QA0BlB,WAAM,GAAW;YACrB;gBACI,IAAI,EAAE,aAAa;gBACnB,IAAI,EAAE,QAAQ;gBACd,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,KAAK;aAChB;SACJ,CAAA;IATG,CAAC;IAWL,gCAAQ,GAAR;QACI,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;IAC/B,CAAC;IAED,mCAAW,GAAX;IAEA,CAAC;IAED,8BAAM,GAAN;QACI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;IACvB,CAAC;IAED,sCAAc,GAAd;QAAA,iBAkBC;QAjBG,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAEhC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAEtB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC;iBACrC,IAAI,CAAC;gBACF,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACnB,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;YAC9B,CAAC,CAAC;iBACD,KAAK,CAAC;gBACH,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YAC3B,CAAC,CAAC,CAAA;QACV,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QACnC,CAAC;IACL,CAAC;IAED,qCAAa,GAAb,UAAc,IAAU;QACpB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;QAEvB,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAChB,KAAK,QAAQ;gBACT,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,KAAK,CAAC;QACd,CAAC;IACL,CAAC;IACL,oBAAC;AAAD,CAjFA,AAiFC,IAAA;AAjFY,aAAa;IALzB,gBAAS,CAAC;QACP,QAAQ,EAAE,MAAM,CAAC,EAAE;QACnB,QAAQ,EAAE,MAAM;QAChB,WAAW,EAAE,iCAAiC;KACjD,CAAC;qCAsB2B,0BAAW;QAChB,eAAM;QACJ,iBAAQ;QACZ,4BAAY;QACd,mBAAW;GAzBlB,aAAa,CAiFzB;AAjFY,sCAAa","file":"user.component.js","sourcesContent":["import { \r\n    Component,\r\n    OnInit,\r\n    OnDestroy\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { FormGroup, FormControl, FormBuilder } from '@angular/forms';\r\n\r\nimport { AppComponent } from '../../component/app.component';\r\n\r\nimport { Tool } from '../view/toolbar.view';\r\nimport { UserService } from \"../../service/user.service\";\r\n\r\nimport { User } from \"../../model/user\";\r\n\r\nconst MAX_ATTEMPTS = 5;\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: \"user\",\r\n    templateUrl: \"../template/user.component.html\"\r\n})\r\nexport class UserComponent implements OnInit, OnDestroy {\r\n\r\n    title: string = \"Account\";\r\n\r\n    email: string;\r\n    password: string;\r\n    passwordConfirm: string;\r\n    passwordMatchError: boolean;\r\n\r\n    loginError: string;\r\n\r\n    errorCount: number;\r\n\r\n    runaway: boolean;\r\n    weGood: boolean;\r\n\r\n    user: User;\r\n\r\n    isPosting: boolean;\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private router: Router,\r\n        private location: Location,\r\n        private _app: AppComponent,\r\n        private fb: FormBuilder\r\n    ) { }\r\n\r\n    private _tools: Tool[] = [\r\n        {\r\n            icon: \"fa-sign-out\",\r\n            name: \"logout\",\r\n            text: \"Log Out\",\r\n            active: false\r\n        }\r\n    ]\r\n\r\n    ngOnInit(): void {\r\n        this.errorCount = 0;\r\n        this.weGood = true;\r\n\r\n        this.user = this._app.user;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n\r\n    }\r\n\r\n    logout(): void {\r\n        this._app.logout();\r\n    }\r\n\r\n    submitEditUser(): void {\r\n        this.passwordMatchError = false;\r\n\r\n        if (this.password === this.passwordConfirm) {\r\n            this.isPosting = true;\r\n\r\n            this.userService.updateUser(this.password)\r\n                .then(() => {\r\n                    this.isPosting = false;\r\n                    this.password = \"\";\r\n                    this.passwordConfirm = \"\";\r\n                })\r\n                .catch(() => {\r\n                    this.isPosting = false;\r\n                })\r\n        } else {\r\n            this.passwordMatchError = true;\r\n        }\r\n    }\r\n\r\n    onToolClicked(tool: Tool): void {\r\n        this._app.showLoader();\r\n        \r\n        switch (tool.name) {\r\n            case \"logout\":\r\n                this.logout();\r\n                break;\r\n        }\r\n    }\r\n}\r\n"]}