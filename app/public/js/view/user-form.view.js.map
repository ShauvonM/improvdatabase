{"version":3,"sources":["../../src/ts/view/user-form.view.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAOuB;AAGvB,4DAA0D;AAE1D,sCAAqC;AAOrC,IAAa,YAAY;IAiBrB,sBACY,IAAkB;QAAlB,SAAI,GAAJ,IAAI,CAAc;QAdrB,cAAS,GAAY,KAAK,CAAC;QAC3B,aAAQ,GAAW,MAAM,CAAC;QAEzB,SAAI,GAA0B,IAAI,mBAAY,EAAE,CAAC;QACjD,WAAM,GAAuB,IAAI,mBAAY,EAAE,CAAC;IAWtD,CAAC;IAEL,+BAAQ,GAAR;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,SAAS,CAAC;IAC9C,CAAC;IAED,kCAAW,GAAX;IAEA,CAAC;IAED,6BAAM,GAAN;QACI,sBAAsB;QACtB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;IAED,iCAAU,GAAV;QACI,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAEhC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YACnC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAE5B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC9B,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QACnC,CAAC;IACL,CAAC;IAEL,mBAAC;AAAD,CAhDA,AAgDC,IAAA;AA9CY;IAAR,YAAK,EAAE;8BAAO,WAAI;0CAAC;AACX;IAAR,YAAK,EAAE;;8CAAkB;AACjB;IAAR,YAAK,EAAE;;+CAA4B;AAC3B;IAAR,YAAK,EAAE;;8CAA2B;AAEzB;IAAT,aAAM,EAAE;8BAAO,mBAAY;0CAA+B;AACjD;IAAT,aAAM,EAAE;8BAAS,mBAAY;4CAA4B;AARjD,YAAY;IALxB,gBAAS,CAAC;QACP,QAAQ,EAAE,MAAM,CAAC,EAAE;QACnB,QAAQ,EAAE,WAAW;QACrB,WAAW,EAAE,sCAAsC;KACtD,CAAC;qCAmBoB,4BAAY;GAlBrB,YAAY,CAgDxB;AAhDY,oCAAY","file":"user-form.view.js","sourcesContent":["import { \r\n    Component,\r\n    OnInit,\r\n    OnDestroy,\r\n    Input,\r\n    Output,\r\n    EventEmitter\r\n} from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder } from '@angular/forms';\r\n\r\nimport { AppComponent } from '../component/app.component';\r\n\r\nimport { User } from '../model/user';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'user-form',\r\n    templateUrl: '../template/view/user-form.view.html'\r\n})\r\nexport class UserFormView implements OnInit, OnDestroy {\r\n\r\n    @Input() user: User;\r\n    @Input() backText: string;\r\n    @Input() isPosting: boolean = false;\r\n    @Input() saveText: string = \"Save\";\r\n\r\n    @Output() back: EventEmitter<boolean> = new EventEmitter();\r\n    @Output() submit: EventEmitter<User> = new EventEmitter();\r\n\r\n    newUser: boolean;\r\n\r\n    email: string;\r\n    password: string;\r\n    passwordConfirm: string;\r\n    passwordMatchError: boolean;\r\n\r\n    constructor(\r\n        private _app: AppComponent\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.newUser = this.user._id == undefined;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        \r\n    }\r\n\r\n    goBack(): void {\r\n        // this._app.logout();\r\n        this.back.emit(true);\r\n    }\r\n\r\n    submitForm(): void {\r\n        this.passwordMatchError = false;\r\n\r\n        if (this.password === this.passwordConfirm) {\r\n            this.user.password = this.password;\r\n            this.submit.emit(this.user);\r\n\r\n            this.password = \"\";\r\n            this.passwordConfirm = \"\";\r\n        } else {\r\n            this.passwordMatchError = true;\r\n        }\r\n    }\r\n    \r\n}\r\n"]}