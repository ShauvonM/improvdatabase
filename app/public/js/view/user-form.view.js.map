{"version":3,"sources":["../../src/ts/view/user-form.view.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAOuB;AAGvB,4DAA0D;AAE1D,sCAAqC;AACrC,wDAAsD;AAOtD,IAAa,YAAY;IAoBrB,sBACY,IAAkB,EAClB,WAAwB;QADxB,SAAI,GAAJ,IAAI,CAAc;QAClB,gBAAW,GAAX,WAAW,CAAa;QAlB3B,cAAS,GAAY,KAAK,CAAC;QAC3B,aAAQ,GAAW,MAAM,CAAC;QAEzB,SAAI,GAA0B,IAAI,mBAAY,EAAE,CAAC;QAC1C,gBAAW,GAAuB,IAAI,mBAAY,EAAE,CAAC;IAelE,CAAC;IAEL,+BAAQ,GAAR;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,SAAS,CAAC;IAC9C,CAAC;IAED,kCAAW,GAAX;IAEA,CAAC;IAED,6BAAM,GAAN;QACI,sBAAsB;QACtB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;IAED,iCAAU,GAAV;QAAA,iBA2BC;QA1BG,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAE3B,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAEnC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAEzB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;iBAC/B,IAAI,CAAC,UAAA,QAAQ;gBACV,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAE1B,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACX,EAAE,CAAC,CAAC,QAAQ,IAAI,OAAO,CAAC,CAAC,CAAC;wBACtB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;oBAC9B,CAAC;gBACL,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;oBAEjC,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;oBACnB,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;gBAC9B,CAAC;YACT,CAAC,CAAC,CAAC;QACP,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QACnC,CAAC;IACL,CAAC;IAEL,mBAAC;AAAD,CAnEA,AAmEC,IAAA;AAjEY;IAAR,YAAK,EAAE;8BAAO,WAAI;0CAAC;AACX;IAAR,YAAK,EAAE;;8CAAkB;AACjB;IAAR,YAAK,EAAE;;+CAA4B;AAC3B;IAAR,YAAK,EAAE;;8CAA2B;AAEzB;IAAT,aAAM,EAAE;8BAAO,mBAAY;0CAA+B;AAC1C;IAAhB,aAAM,CAAC,OAAO,CAAC;8BAAc,mBAAY;iDAA4B;AAR7D,YAAY;IALxB,gBAAS,CAAC;QACP,QAAQ,EAAE,MAAM,CAAC,EAAE;QACnB,QAAQ,EAAE,WAAW;QACrB,WAAW,EAAE,sCAAsC;KACtD,CAAC;qCAsBoB,4BAAY;QACL,0BAAW;GAtB3B,YAAY,CAmExB;AAnEY,oCAAY","file":"user-form.view.js","sourcesContent":["import { \r\n    Component,\r\n    OnInit,\r\n    OnDestroy,\r\n    Input,\r\n    Output,\r\n    EventEmitter\r\n} from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder } from '@angular/forms';\r\n\r\nimport { AppComponent } from '../component/app.component';\r\n\r\nimport { User } from '../model/user';\r\nimport { UserService } from '../service/user.service';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'user-form',\r\n    templateUrl: '../template/view/user-form.view.html'\r\n})\r\nexport class UserFormView implements OnInit, OnDestroy {\r\n\r\n    @Input() user: User;\r\n    @Input() backText: string;\r\n    @Input() isPosting: boolean = false;\r\n    @Input() saveText: string = \"Save\";\r\n\r\n    @Output() back: EventEmitter<boolean> = new EventEmitter();\r\n    @Output('valid') onValidated: EventEmitter<User> = new EventEmitter();\r\n\r\n    newUser: boolean;\r\n\r\n    isValidating: boolean;\r\n    emailConflict: boolean;\r\n\r\n    email: string;\r\n    password: string;\r\n    passwordConfirm: string;\r\n    passwordMatchError: boolean;\r\n\r\n    constructor(\r\n        private _app: AppComponent,\r\n        private userService: UserService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.newUser = this.user._id == undefined;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        \r\n    }\r\n\r\n    goBack(): void {\r\n        // this._app.logout();\r\n        this.back.emit(true);\r\n    }\r\n\r\n    submitForm(): void {\r\n        this.passwordMatchError = false;\r\n        this.emailConflict = false;\r\n\r\n        if (this.password === this.passwordConfirm) {\r\n            this.user.password = this.password;\r\n\r\n            this.isValidating = true;\r\n\r\n            this.userService.validate(this.user)\r\n                .then(conflict => {\r\n                    this.isValidating = false;\r\n\r\n                    if (conflict) {\r\n                        if (conflict == 'email') {\r\n                            this.emailConflict = true;\r\n                        }\r\n                    } else {\r\n                        this.onValidated.emit(this.user);\r\n\r\n                        this.password = \"\";\r\n                        this.passwordConfirm = \"\";\r\n                    }\r\n            });\r\n        } else {\r\n            this.passwordMatchError = true;\r\n        }\r\n    }\r\n    \r\n}\r\n"]}