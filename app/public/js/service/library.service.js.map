{"version":3,"sources":["../../src/ts/service/library.service.ts"],"names":[],"mappings":"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","file":"library.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Headers, Http } from '@angular/http';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport { Package } from '../model/package';\r\nimport { MaterialItem, MaterialItemVersion } from '../model/material-item';\r\nimport { Subscription } from '../model/subscription';\r\n\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable()\r\nexport class LibraryService {\r\n    private subscriptionUrl = '/api/subscription';\r\n    private materialsUrl = '/api/material/';\r\n\r\n    private subscriptions: Subscription[];\r\n    private materials: MaterialItem[];\r\n    private packages: Package[];\r\n\r\n    constructor(\r\n        private http: Http,\r\n        private userService: UserService\r\n        ) { }\r\n\r\n    // getLibrary(): Promise<Subscription[]> {\r\n    //     // TODO: add videos?\r\n    //     return Promise.all([this.getSubscriptions()])\r\n    //         .then(() => {\r\n    //             // TODO: sort?\r\n    //             return this.subscriptions;\r\n    //         });\r\n    // }\r\n\r\n    private _subscriptionPromise: Promise<Subscription[]>;\r\n    getSubscriptions(): Promise<Subscription[]> {\r\n        if (!this._subscriptionPromise) {\r\n            this._subscriptionPromise = this.http.get(this.subscriptionUrl, this.userService.getAuthorizationHeader())\r\n                .toPromise()\r\n                .then(response => {\r\n                    this.subscriptions = response.json() as Subscription[];\r\n                    this.subscriptions.forEach(sub => {\r\n                        this._sortMaterials(sub);\r\n                    });\r\n                    return this.subscriptions;\r\n                })\r\n                .catch(this.handleError);\r\n        }\r\n        return this._subscriptionPromise;\r\n    }\r\n\r\n    getSubscription(slug: string): Promise<Subscription> {\r\n        if (this._subscriptionPromise) {\r\n            return new Promise<Subscription>((resolve, reject) => {\r\n                this.getSubscriptions().then(subscriptions => {\r\n                    subscriptions.forEach(s => {\r\n                        if (s.package.slug === slug) {\r\n                            resolve(this._sortMaterials(s));\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        } else {\r\n            return this.http.get(this.subscriptionUrl + '/' + slug, this.userService.getAuthorizationHeader())\r\n                .toPromise()\r\n                .then(response => {\r\n                    return this._sortMaterials(response.json() as Subscription);\r\n                })\r\n                .catch(this.handleError);\r\n        }\r\n    }\r\n\r\n    _sortMaterials(sub: Subscription): Subscription {\r\n        sub.package.materials.sort((a, b) => {\r\n            if (a.addon) {\r\n                return 1;\r\n            } else if (b.addon) {\r\n                return -1;\r\n            }\r\n        });\r\n        return sub;\r\n    }\r\n\r\n    downloadMaterial(id: string): void {\r\n        this.http.get(this.materialsUrl + id, this.userService.getAuthorizationHeader())\r\n            .toPromise()\r\n            .then(response => {\r\n                let url = response.json().url;\r\n                window.open(location.origin + url);\r\n            });\r\n    }\r\n\r\n    getLatestVersionForMaterialItem(m: MaterialItem): MaterialItemVersion {\r\n        m.versions.sort((a, b) => {\r\n            return b.ver - a.ver;\r\n        });\r\n        return m.versions[0];\r\n    }\r\n\r\n    // private _packagePromise: Promise<Package[]>;\r\n    // getPackages(): Promise<Package[]> {\r\n    //     if (!this._packagePromise) {\r\n    //         this._packagePromise = this.http.get(this.packageUrl, this.userService.getAuthorizationHeader())\r\n    //             .toPromise()\r\n    //             .then(response => {\r\n    //                 this.packages = response.json() as Package[];\r\n    //                 return this.packages;\r\n    //             })\r\n    //             .catch(this.handleError);\r\n    //     } \r\n    //     return this._packagePromise;\r\n    // }\r\n\r\n    // getOwnedPackages(): Promise<Package[]> {\r\n    //     return new Promise<Package[]>((resolve, reject) => {\r\n    //         this.getPackages().then(packages => {\r\n    //             let owned: Package[] = [];\r\n    //             packages.forEach(p => {\r\n    //                 if (p.Owned) {\r\n    //                     owned.push(p);\r\n    //                 }\r\n    //                 resolve(owned);\r\n    //             })\r\n    //         })\r\n    //     });\r\n    // }\r\n\r\n    // private _materialsPromise: Promise<MaterialItem[]>;\r\n    // getMaterials(): Promise<MaterialItem[]> {\r\n    //     if (!this._materialsPromise) {\r\n    //         this._materialsPromise = this.http.get(this.materialsUrl, this.userService.getAuthorizationHeader())\r\n    //             .toPromise()\r\n    //             .then(response => {\r\n    //                 this.materials = response.json() as MaterialItem[];\r\n    //                 return this.materials;\r\n    //             })\r\n    //             .catch(this.handleError);\r\n    //     } \r\n    //     return this._materialsPromise;\r\n    // }\r\n\r\n    private handleError(error: any): Promise<any> {\r\n        console.error('An error has occurred', error);\r\n        return Promise.reject(error.message || error);\r\n    }\r\n}"]}