{"version":3,"sources":["../../src/ts/service/library.service.ts"],"names":[],"mappings":"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","file":"library.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport { AppHttp } from '../data/app-http';\r\n\r\nimport { Package } from '../model/package';\r\nimport { MaterialItem, MaterialItemVersion } from '../model/material-item';\r\nimport { Subscription } from '../model/subscription';\r\n\r\nimport { User } from '../model/user';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable()\r\nexport class LibraryService {\r\n    private packageUrl = '/api/package';\r\n    private materialsUrl = '/api/material/';\r\n    private ownedMaterialsUrl = '/api/user/:_id/materials';\r\n\r\n    private subscriptions: Subscription[];\r\n    private materials: MaterialItem[];\r\n    private packages: Package[];\r\n\r\n    constructor(\r\n        private http: AppHttp,\r\n        private userService: UserService\r\n        ) { }\r\n\r\n    private _packagePromise: Promise<Package[]>;\r\n    getPackages(): Promise<Package[]> {\r\n        if (!this._packagePromise) {\r\n            this._packagePromise = this.http.get(this.packageUrl)\r\n                .toPromise()\r\n                .then(response => {\r\n                    this.packages = response.json() as Package[];\r\n                    return this.packages;\r\n                })\r\n                .catch(this.handleError);\r\n        }\r\n        return this._packagePromise;\r\n    }\r\n\r\n    private _materialPromise: Promise<MaterialItem[]>;\r\n    getOwnedMaterials(): Promise<MaterialItem[]> {\r\n        let user = this.userService.getLoggedInUser();\r\n        if (user) {\r\n            if (user.materials && user.materials.length) {\r\n                this._materialPromise = new Promise<MaterialItem[]>((res, rej) => {\r\n                    res(user.materials);\r\n                });\r\n            } else {\r\n                this._materialPromise = this._getOwnedMaterials();\r\n            }\r\n        } else {\r\n            this._materialPromise = new Promise<MaterialItem[]>((res, rej) => {\r\n                rej(\"No user\");\r\n            });\r\n        }\r\n\r\n        return this._materialPromise;\r\n    }\r\n\r\n    private _getOwnedMaterials(): Promise<MaterialItem[]> {\r\n        let url = this.ownedMaterialsUrl.replace(':_id', this.userService.getLoggedInUser()._id);\r\n        return this.http.get(url)\r\n            .toPromise()\r\n            .then(response => {\r\n                return response.json() as MaterialItem[];\r\n            })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    downloadMaterial(id: string): void {\r\n        this.http.get(this.materialsUrl + id)\r\n            .toPromise()\r\n            .then(response => {\r\n                let url = response.json().url;\r\n                window.open(location.origin + url);\r\n            });\r\n    }\r\n\r\n    getLatestVersionForMaterialItem(m: MaterialItem): MaterialItemVersion {\r\n        m.versions.sort((a, b) => {\r\n            return b.ver - a.ver;\r\n        });\r\n        return m.versions[0];\r\n    }\r\n\r\n    private handleError(error: any): Promise<any> {\r\n        console.error('An error has occurred', error);\r\n        return Promise.reject(error.message || error);\r\n    }\r\n}"]}