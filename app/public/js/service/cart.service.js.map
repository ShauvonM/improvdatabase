{"version":3,"sources":["../../src/ts/service/cart.service.ts"],"names":[],"mappings":"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","file":"cart.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport { AppHttp } from '../data/app-http';\r\n\r\nimport { PackageConfig } from '../model/config';\r\n\r\nimport { Package } from '../model/package';\r\nimport { Purchase, PurchaseOther } from '../model/purchase';\r\nimport { MaterialItem, MaterialItemVersion } from '../model/material-item';\r\nimport { Subscription } from '../model/subscription';\r\n\r\nimport { User } from '../model/user';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable()\r\nexport class CartService {\r\n    private chargeUrl = \"/charge\";\r\n    private signupUrl = \"/signup\";\r\n    private configUrl = \"/packageconfig\";\r\n\r\n    private purchase: Purchase = new Purchase();\r\n    private user: User;\r\n\r\n    private config: PackageConfig;\r\n\r\n    constructor(\r\n        private http: AppHttp,\r\n        private userService: UserService\r\n        ) { }\r\n\r\n    reset(): void {\r\n        this.purchase = new Purchase();\r\n        this.purchase.packages = [];\r\n        this.purchase.materials = [];\r\n        this.purchase.other = [];\r\n    }\r\n\r\n    getConfig(): Promise<PackageConfig> {\r\n        if (this.config) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(this.config);\r\n            });\r\n        } else {\r\n            return this.http.get(this.configUrl)\r\n                .toPromise()\r\n                .then(result => {\r\n                    this.config = result.json() as PackageConfig;\r\n                    return this.config;\r\n                });\r\n        }\r\n    }\r\n\r\n    addPackage(pack: Package): Purchase {\r\n        (<Package[]> this.purchase.packages).push(pack);\r\n        this.purchase.total += pack.price;\r\n\r\n        return this.purchase;\r\n    }\r\n\r\n    addSubscription(role: number) {\r\n        let sub = new PurchaseOther();\r\n        sub.key = \"subscription\";\r\n        sub.params = {\r\n            role: role\r\n        }\r\n\r\n        // don't duplicate the subscription item\r\n        let index = -1;\r\n        this.purchase.other.forEach((o, i) => {\r\n            if (o.key == 'subscription') {\r\n                index = i;\r\n            }\r\n        });\r\n        this.purchase.other.splice(index, 1, sub);\r\n    }\r\n\r\n    setUser(user: User): void {\r\n        this.user = user;\r\n    }\r\n\r\n    charge(token: String): Promise<User> {\r\n        return this.http.post(this.chargeUrl, {\r\n            stripeToken: token,\r\n            purchase: this.purchase,\r\n            user: this.user\r\n        }).toPromise()\r\n            .then(result => {\r\n                return result.json() as User;\r\n            })\r\n    }\r\n\r\n    signup(token: string, email: string, password: string, userName: string, teamName: string): Promise<User> {\r\n        // if (pack && pack._id !== 'sub') {\r\n        //     this.addPackage(pack);\r\n        // }\r\n        // if (role) {\r\n        //     this.addSubscription(role);\r\n        // }\r\n        return this.http.post(this.signupUrl, {\r\n            stripeToken: token,\r\n            purchase: this.purchase,\r\n            email: email,\r\n            password: password,\r\n            userName: userName,\r\n            teamName: teamName\r\n        }).toPromise()\r\n            .then(result => {\r\n                // return result.json() as User;\r\n                return null;\r\n            })\r\n    }\r\n}"]}