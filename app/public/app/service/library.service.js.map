{"version":3,"sources":["../src/ts/app/service/library.service.ts"],"names":[],"mappings":"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","file":"library.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Headers, Http } from '@angular/http';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport { Package } from '../model/package';\r\nimport { MaterialItem } from '../model/material-item';\r\n\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable()\r\nexport class LibraryService {\r\n    private packageUrl = '/api/package';\r\n    private materialsUrl = '/api/library';\r\n\r\n    private materials: MaterialItem[];\r\n    private packages: Package[];\r\n\r\n    constructor(\r\n        private http: Http,\r\n        private userService: UserService\r\n        ) { }\r\n\r\n    getLibrary(): Promise<MaterialItem[]> {\r\n        // TODO: add videos?\r\n        return Promise.all([this.getPackages(), this.getMaterials()])\r\n            .then(() => {\r\n                // TODO: sort?\r\n                return this.materials;\r\n            });\r\n    }\r\n\r\n    private _packagePromise: Promise<Package[]>;\r\n    getPackages(): Promise<Package[]> {\r\n        if (!this._packagePromise) {\r\n            this._packagePromise = this.http.get(this.packageUrl, this.userService.getAuthorizationHeader())\r\n                .toPromise()\r\n                .then(response => {\r\n                    this.packages = response.json() as Package[];\r\n                    return this.packages;\r\n                })\r\n                .catch(this.handleError);\r\n        } \r\n        return this._packagePromise;\r\n    }\r\n\r\n    getOwnedPackages(): Promise<Package[]> {\r\n        return new Promise<Package[]>((resolve, reject) => {\r\n            this.getPackages().then(packages => {\r\n                let owned: Package[] = [];\r\n                packages.forEach(p => {\r\n                    if (p.Owned) {\r\n                        owned.push(p);\r\n                    }\r\n                    resolve(owned);\r\n                })\r\n            })\r\n        });\r\n    }\r\n\r\n    private _materialsPromise: Promise<MaterialItem[]>;\r\n    getMaterials(): Promise<MaterialItem[]> {\r\n        if (!this._materialsPromise) {\r\n            this._materialsPromise = this.http.get(this.materialsUrl, this.userService.getAuthorizationHeader())\r\n                .toPromise()\r\n                .then(response => {\r\n                    this.materials = response.json() as MaterialItem[];\r\n                    return this.materials;\r\n                })\r\n                .catch(this.handleError);\r\n        } \r\n        return this._materialsPromise;\r\n    }\r\n\r\n    private handleError(error: any): Promise<any> {\r\n        console.error('An error has occurred', error);\r\n        return Promise.reject(error.message || error);\r\n    }\r\n}"]}